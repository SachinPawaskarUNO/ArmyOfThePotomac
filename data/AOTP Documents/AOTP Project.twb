<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0615.1128                               -->
<workbook original-version='18.1' source-build='2018.1.2 (20181.18.0615.1128)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='30' min='5' />
      </column>
    </datasource>
    <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' inline='true' name='federated.0htu0bv1fgj03y1h899z019l0bbb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Pivoted AOTP Join' name='excel-direct.1tnlqc8052tacg17l9nbr1tp8oiq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/chaas/Desktop/AOTP Documents/Pivoted AOTP Join.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1tnlqc8052tacg17l9nbr1tp8oiq' name='Pivoted Join (2)' table='[&apos;Pivoted Join (2)$&apos;]' type='table'>
          <columns gridOrigin='A1:R10001:no:A1:R10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Event Name' ordinal='0' />
            <column datatype='integer' name='Local' ordinal='1' />
            <column datatype='real' name='Latitude' ordinal='2' />
            <column datatype='integer' name='Pivot1 Values' ordinal='3' />
            <column datatype='real' name='Longitude' ordinal='4' />
            <column datatype='string' name='Date' ordinal='5' />
            <column datatype='string' name='Month' ordinal='6' />
            <column datatype='string' name='Key-1' ordinal='7' />
            <column datatype='string' name='Class' ordinal='8' />
            <column datatype='string' name='Order' ordinal='9' />
            <column datatype='string' name='Affliction' ordinal='10' />
            <column datatype='integer' name='Year' ordinal='11' />
            <column datatype='string' name='Deaths and Cases' ordinal='12' />
            <column datatype='integer' name='Battle Order' ordinal='13' />
            <column datatype='integer' name='Day' ordinal='14' />
            <column datatype='string' name='Key' ordinal='15' />
            <column datatype='integer' name='Parasitic' ordinal='16' />
            <column datatype='string' name='Location' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Event Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Event Name]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Event Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Local]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Local</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot1 Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot1 Values]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Pivot1 Values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Key-1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Key-1]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Key-1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Class]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Class</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Order</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Affliction</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Affliction]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Affliction</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths and Cases</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Deaths and Cases]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Deaths and Cases</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Battle Order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Battle Order]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Battle Order</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Key</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Key]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Key</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parasitic</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parasitic]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Parasitic</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R10001:no:A1:R10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
      <column caption='Top Diseases vs. Other' datatype='string' name='[Calculation_2034501150461566976]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Top Affliction by Number] THEN [Affliction]&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;End' />
      </column>
      <column caption='Class1' datatype='string' name='[Class]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Unidentified' />
        </aliases>
      </column>
      <column caption='Day1' datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
      <column caption='Event Name1' datatype='string' name='[Event Name]' role='dimension' type='nominal' />
      <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month1' datatype='string' name='[Month]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Order1' datatype='string' name='[Order]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Unidentified' />
        </aliases>
      </column>
      <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_2034501150461566976]' derivation='None' name='[none:Calculation_2034501150461566976:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
      <group caption='Action (Disease,Class,Deaths and Cases,Order)' hidden='true' name='[Action (Disease,Class,Deaths and Cases,Order)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Affliction]' />
          <groupfilter function='level-members' level='[Class]' />
          <groupfilter function='level-members' level='[Deaths and Cases]' />
          <groupfilter function='level-members' level='[Order]' />
        </groupfilter>
      </group>
      <group caption='Action (Event Name)' hidden='true' name='[Action (Event Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Event Name]' />
        </groupfilter>
      </group>
      <group caption='Top Diseases by Number' name='[Top Affliction by Number]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Pivot1 Values])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Affliction]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Class, Order'>
          <field>[Class]</field>
          <field>[Order]</field>
          <field>[Affliction]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.44186' group-percentage='0.0591966' measure-ordering='alphabetic' measure-percentage='0.439746' parameter-percentage='0.0591966' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2034501150461566976:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Contusion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Typhoid&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abscess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diarrhea_acute&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Piles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Fever_remittent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fever_Malarial&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Diarrhea_cronic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Catarrh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Inflammation_tonsils&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Other_Miasmatic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rheumatism_acute&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jaundice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fever_tertian_intermittent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gonorrhea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other_Respiratory&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dyspepsia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fever_quotidian_intermittent&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Wound_gunshot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Constipation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dysentery_acute&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neuralgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rheumatism_chronic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Headache&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Epidemic_catarrh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bronchitis_acute&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syphilis&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Deaths and Cases:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1865 March Case&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1863 May Case&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;1862 May Death&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1864 May Case&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1862 May Case&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;1863 May death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1865 March death&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;1864 May death&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='5' max='30' min='5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Disease Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Deaths and Cases' />
        <param name='target' value='Disease Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Class Dashboard' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Class Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Animated Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1862, March, 11, General McLellan is Relieved from his Post</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Day1' datatype='integer' name='[Day]' role='dimension' type='quantitative' />
            <column caption='Event Name1' datatype='string' name='[Event Name]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Month1' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day]' derivation='None' name='[none:Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Event Name]' derivation='None' name='[none:Event Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Latitude:qk]</rows>
        <cols>[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]</cols>
        <pages>
          <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Year:ok]</column>
          <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Month:nk]</column>
          <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Day:ok]</column>
          <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Event Name:nk]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
    </worksheet>
    <worksheet name='Cases Class Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases by Class</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Class1' datatype='string' name='[Class]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Event Name1' datatype='string' name='[Event Name]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Order1' datatype='string' name='[Order]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Class]' derivation='None' name='[none:Class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order]' derivation='None' name='[none:Order:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]'>
            <groupfilter function='level-members' level='[Event Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='level-members' level='[none:Deaths and Cases:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' />
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Order:nk]' />
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Cases Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 September Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 February case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1862 Total Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1863 Total Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1864 Total Cases&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Class Hierarchy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Diseases by Class</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Class1' datatype='string' name='[Class]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Event Name1' datatype='string' name='[Event Name]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Order1' datatype='string' name='[Order]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Class]' derivation='None' name='[none:Class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order]' derivation='None' name='[none:Order:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]'>
            <groupfilter function='level-members' level='[Event Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' direction='DESC' using='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
          <computed-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' direction='DESC' using='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
          <manual-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;1863 September Case&quot;</bucket>
              <bucket>&quot;1863 September death&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <alphabetic-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Order:nk]' direction='DESC' />
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]</rows>
        <cols>[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Deaths Class Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths by Class</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Class1' datatype='string' name='[Class]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Event Name1' datatype='string' name='[Event Name]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Order1' datatype='string' name='[Order]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Class]' derivation='None' name='[none:Class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order]' derivation='None' name='[none:Order:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]'>
            <groupfilter function='level-members' level='[Event Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='level-members' level='[none:Deaths and Cases:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' />
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Order:nk]' />
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Deaths Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 August Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 July Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 August death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 May Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 August death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 May death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 August Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 May death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 September Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1862 Total Deaths&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1863 Total deaths&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1864 Total Deaths&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Diseases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' direction='DESC' using='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</rows>
        <cols>[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column datatype='integer' name='[Battle Order]' role='measure' type='quantitative' />
            <column caption='Event Name1' datatype='string' name='[Event Name]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Location]' derivation='Attribute' name='[attr:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Event Name]' derivation='None' name='[none:Event Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Battle Order]' derivation='Sum' name='[sum:Battle Order:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Event Name:nk]' />
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Event Name:nk]' />
              <path column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Battle Order:qk]' />
              <tooltip column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[attr:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Latitude:qk]</rows>
        <cols>[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Afflictions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Diseases&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='30' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Top Diseases vs. Other' datatype='string' name='[Calculation_2034501150461566976]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Top Affliction by Number] THEN [Affliction]&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;End' />
            </column>
            <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2034501150461566976]' derivation='None' name='[none:Calculation_2034501150461566976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' direction='DESC' using='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]</rows>
        <cols>[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Cases Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Cases&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='30' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Top Diseases vs. Other' datatype='string' name='[Calculation_2034501150461566976]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Top Affliction by Number] THEN [Affliction]&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;End' />
            </column>
            <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2034501150461566976]' derivation='None' name='[none:Calculation_2034501150461566976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 September Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 February case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1862 Total Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1863 Total Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1864 Total Cases&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Top Deaths Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Deaths&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='30' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Top Diseases vs. Other' datatype='string' name='[Calculation_2034501150461566976]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Top Affliction by Number] THEN [Affliction]&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;End' />
            </column>
            <column caption='Deaths and Cases1' datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2034501150461566976]' derivation='None' name='[none:Calculation_2034501150461566976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 August Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 July Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 August death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 May Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 August death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 May death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 August Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 May death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 September Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1862 Total Deaths&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1863 Total deaths&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1864 Total Deaths&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;May, 1863&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Class Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Diseases by Class of the Army of the Potomac&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
      </datasources>
      <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
        <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
        <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6250' id='16' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91750' id='13' param='vert' type='layout-flow' w='98400' x='800' y='7250'>
              <zone fixed-size='68' h='9500' id='6' is-fixed='true' mode='slider' name='Map' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' show-all='false' type='filter' w='98400' x='800' y='7250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='82250' id='5' param='horz' type='layout-flow' w='98400' x='800' y='16750'>
                <zone h='82250' id='3' type='layout-basic' w='78400' x='800' y='16750'>
                  <zone h='41114' id='1' name='Map' w='78400' x='800' y='16750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41136' id='7' name='Class Hierarchy' w='78400' x='800' y='57864'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='200' h='82250' id='4' is-fixed='true' param='vert' type='layout-flow' w='20000' x='79200' y='16750'>
                  <zone h='30937' id='8' name='Cases Class Pie Chart' w='20000' x='79200' y='16750'>
                    <layout-cache fixed-size-h='245' fixed-size-w='181' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='155' h='20375' id='9' is-fixed='true' name='Cases Class Pie Chart' pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' type='color' w='20000' x='79200' y='47687'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30938' id='10' name='Deaths Class Pie Chart' w='20000' x='79200' y='68062'>
                    <layout-cache fixed-size-h='245' fixed-size-w='181' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='11' name='Class Hierarchy' pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' w='18400' x='58000' y='58625' />
      </zones>
    </dashboard>
    <dashboard name='Disease Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Diseases of the Army of the Potomac</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
      </datasources>
      <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
        <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
        <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='12' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6250' id='13' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='87' h='11875' id='6' is-fixed='true' mode='slider' name='Map' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' type='filter' w='98400' x='800' y='7250'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='79875' id='5' param='horz' type='layout-flow' w='98400' x='800' y='19125'>
              <zone h='79875' id='3' type='layout-basic' w='81100' x='800' y='19125'>
                <zone h='39936' id='1' name='Map' w='81100' x='800' y='19125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39939' id='7' name='Diseases' w='81100' x='800' y='59061'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='173' h='79875' id='4' is-fixed='true' param='vert' type='layout-flow' w='17300' x='81900' y='19125'>
                <zone fixed-size='290' h='37250' id='9' is-fixed='true' name='Cases Pie Chart' w='17300' x='81900' y='19125'>
                  <layout-cache fixed-size-w='160' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='8' name='Diseases' pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' w='18400' x='62100' y='58625' />
        <zone fixed-size='301' h='33250' id='10' is-fixed='true' name='Deaths Pie Chart' w='17300' x='82200' y='57500'>
          <layout-cache fixed-size-w='160' type-h='fixed' type-w='fixed' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top Afflictions Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Diseases of the Army of the Potomac</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
      </datasources>
      <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
        <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
        <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6250' id='15' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='11125' id='6' mode='slider' name='Map' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' type='filter' w='98400' x='800' y='7250'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='80625' id='5' param='horz' type='layout-flow' w='98400' x='800' y='18375'>
              <zone h='80625' id='3' type='layout-basic' w='81200' x='800' y='18375'>
                <zone h='38665' id='1' name='Map' w='81200' x='800' y='18375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='41960' id='7' name='Top Afflictions' w='81200' x='800' y='57040'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='172' h='80625' id='4' is-fixed='true' param='vert' type='layout-flow' w='17200' x='82000' y='18375'>
                <zone h='9875' id='9' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='17200' x='82000' y='18375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27250' id='10' name='Top Cases Pie Chart' w='17200' x='82000' y='28250'>
                  <layout-cache fixed-size-h='210' fixed-size-w='160' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27250' id='12' name='Top Deaths Pie Chart' w='17200' x='82000' y='55500'>
                  <layout-cache fixed-size-h='210' fixed-size-w='160' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='8' name='Top Afflictions' pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' w='18400' x='62300' y='56625' />
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='dashboard' maximized='true' name='Disease Dashboard'>
      <viewpoints>
        <viewpoint name='Cases Pie Chart' />
        <viewpoint name='Deaths Pie Chart' />
        <viewpoint name='Diseases'>
          <highlight field='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Class Dashboard'>
      <viewpoints>
        <viewpoint name='Cases Class Pie Chart'>
          <highlight>
            <color-one-way>
              <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Class Hierarchy'>
          <highlight>
            <color-one-way>
              <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Deaths Class Pie Chart' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Top Afflictions Dashboard'>
      <viewpoints>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Afflictions'>
          <highlight>
            <color-one-way>
              <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top Cases Pie Chart'>
          <highlight field='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top Deaths Pie Chart' />
      </viewpoints>
      <active id='6' />
    </window>
    <window class='worksheet' name='Diseases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Event Name:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cases Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Deaths Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Class Hierarchy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cases Class Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Deaths Class Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Afflictions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[io:Top Affliction by Number:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Cases Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Deaths Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Animated Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1862</bucket>
            <bucket>&quot;April&quot;</bucket>
            <bucket>5</bucket>
            <bucket>&quot;March from Hampton to Yorktown&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Day:qk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Event Name:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Month:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Animated Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Cases Class Pie Chart' width='164'>
      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
    </thumbnail>
    <thumbnail height='164' name='Cases Pie Chart' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deXBb933gP7geHm6ABEgCvElREilah2XLp+zajuNk47rZ2EmTJtN2t5l2
      s920e8xsdtp0d6ZtZnYys0fSJHYm2+luW+e0ktRtHNe35UQ+ZF2WRJqSeJ84iIO4Hh6u/QMC
      CRDgIcmKHqn3mdGQeHwHQH34/f6+v9/7/Z6mWCwWUVFRCNob/QZUVCpRhVRRFKqQKopCFVJF
      UahCqigKVUgVRaEKqaIoVCFVFIUqpIqiUIVUURSqkCqKQhVSRVGoQqooClVIFUWhCqmiKFQh
      VRSFKqSKolCFVFEUqpAqikIVUkVRqEKqKApVSBVFoQqpoihUIVUUhSqkiqJQhVRRFKqQKopC
      FVJFUahCqigKVUgVRaEKqaIoVCFVFIUqpIqiUIVUURSqkCqKQhVSRVGoQqooClVIFUWhCqmi
      KFQhVRSFKqSKolCFVFEUqpAqikIVUkVRqEKqKApVSBVFoQqpoij0N/oNbGkScYgnODk9DcDY
      6EUAIuEw0XCYh4qtPGlqpslpoclV+mcxizzaG2XG0EOHq+FGvntFogp5pSTiMD8PFy/AwjwA
      L4+MEJGztfu6WglEkgQiSRgvbepq1HF34TRPS/cC0OFqoMPZwOGevl/VJ1A0qpCbIJgIMHvh
      H9CETrJv5taan3dbrETkyKbOZS0sMZ/NL7+eioSZioT5xfglHKKJu2xO+vUC4sDAB/b+txKq
      kOtQWIjwwjP/ly79aY4YZ7g7G8Sh20GXxl61X4/FzMlIrZB5UQdS9bZBV4pFbRvka3YnJqWJ
      /fPLBC6Movd4cDzxOJb77/sgP5LiUYuaOhQlmdzpMfLvz9BsbmZuIUyrvQMAjXX4ms7dZIqQ
      02fq/swST9BzYRSAXDDI4pNPMffFP0YaGrqma24lVCErKEoy+fdnyL01QjGaBGBX5yDz+W58
      SwlGdTZChrGa4251ueqeLy1JNds8Fh1zWU/d/a2JZM22XDBI4M//Ev+f/wW5YPBKPs6WRBWS
      UlWcn/CTe2uEwkJ16jXoNHS09ONYtFEQ7ARCIdLFpZpzuATDpq7V6YHZXH0hbzlxZs3jMkPD
      zH3xj4k9c2RT19mqqEIm4rheeoHIyVNr7jLQcyejwSKDBgcJjZ7XCjM1+3RbrBteqsmUJUuq
      7s8s8QTN8/4NzxF75si2TuM3t5CnTsAPvw+JOEuz7xNNxevuZjfp8Xp244sa8WtNhAyjV3U5
      jzZKRFO/jtyMjGXKaTz5+tGreh9K5uYUMhEvyXjq5PKmHouFpdn31zxkd+cgU4t5jOYW3PJE
      TdrusZg3vKzF2bhmui4XM1fC4pNPsfjkU1d8nJK56YTMBYNIL79SJWOZXl2eWHi27nFtng5S
      mi6aJS0JjZ5wsXo/pyDUHJOkurPcq5tmqmiv2W+z6boeydeP4v/zv7iqY5XITSVkTErz9Mm3
      CXzvB0jhaN191kvdva17cCzamBebGS5WtyN7LJYNr39bS67u9quJjpVkhobx/+cvkRsfv6bz
      KIGbRshgIsD/e+3vGM7KvPTohwm8e6qulOul7t2dg8zErBj0drLF92vS9kaVdtbsqEnZ1xId
      y+hNIo4mN/Fjb1zTeZTATSFkMBHgqV9+nXDyRfTpcS447etKuV7qHui+k+ZADr9WrEnb61Xa
      ZrOIS6ztLrImktckpN4k0rCnn7TVzP957z2e+9Z3rvpcSuCmEPLo6CsM+89xIZlFr32rSsrw
      +eG6Uq6VunvaBrAmTAhmL4urhHQZqiOkVNExbi3GiWhrK+z1+h43olLG743P4MmKnA0W+N7L
      5676nDeabS/k0dFXOHLm+8uvLySz5HOvL0v5/EP3ET5fOxy4Vuo2Czq05r1YMwKzxWEKwsow
      4Hopu0mUGZOrhbyWdK03iVh8LaStZr41Mg45K1POZo5lHHz/5XOcGwtc1XlvNNtayHKqXs1k
      Vkss/0u8hZFlKf3HazvG10rdvW17cMWbGdXZmJdWhhK71yls+m0LpHXuqm3XKmOhvZVvjYxz
      uGkfIYedE1KpffrpniCDk9+A6NYrcratkMFEgL984ctr/nxRLnApdRxz9DgXnHZ+ds+hulLq
      AqM1qbvN08Fiwkmf0VGVtl2run7yom75+7TNVlPQXE11XZZxtMHJt0bGGbD5eDKe44TkocmU
      5dM9QT7Te3nMe/gnINXvTVAq21ZIJl7Fna29WaGSRblAUD8Cybe54LTz2t6BGildglA3de/u
      HGTSr2OEi5tK27vNctXrq0nXlTK+FI7Rqbfww5yLFCaaTFm+cnBiRUYoyTj+6hVd40azPYWU
      oniC5/mzpl4etzevu+uiXCAsnceTfYNT7T6Od3cQG61Odb26PJp0dYXc27qHrpSbgmBflbZX
      Ku3KosZgKVYdf6XRsSzju1YLL4VjDGob+JGhnxQmPt0T5Dv3XqTJVOeu9YVTWyp1b08hh3+8
      /O3jjma+5t1Nv3Ht9l1Co+dEfBxP9g1+MbCTUzodybmFqn3ik6drUren9WHIWKrSdr0hxCZT
      Fkk0VW27kuhYKeP7wSWaWu7h2/nW2hS9FlsoSm4/IaPjEJ2o2uTRC5uKlmUpnz90gOOyXNUd
      VC91D/bcgk/q5qRm/QhkNotcSq/8QTTP+zctZKWMgTgkHD38ZH6pfoquQzAnc2TybYYWtkZX
      0PYTcp1osJloeSI+zoD2ZZ4/dICzs3NVUtZL3Zl8Bwa9ndlCqeuo3s26ZiIIFQXOZtN1pYwj
      IRgqCBzLOHjAPbd2ir5MMCdzNBnhq7FpzjZZOJd8Z1PXvNFsLyHrRMfVlKPll5t61tzn+dAs
      zfkXOfLQ4RopV6fufX13kYq7V1XbpcJGkkrFTpMltVxhV05TWI+yjMM2J9NFBxPNu1mwtPDp
      niD//sD6lXNZxFcaDLTs7MVmtTKdnGA6ofy25PYS8graSgNG67rR8nhsHmfqnzjy0GGGw+Fl
      KV2CgC64IpTT6mRfroVhYSUFlwubvLEUFYXGlTt86k1TWI3eJCK7Gxm2OTmWTPLPCQuRTIov
      9l1cN0UHczJfjU7zvJVlESt5fuYnG177RrN9hJSiG0bH1WwULd+TwuSj/8AP7r6d4XB4eXtD
      XqpK3famO9HLxrrzbQDahZV9NxoqLMu40Ojh0mKS9/T9WE16vnJwgr1rNIGDOZm/Sfj5X4Yk
      ut52Ghvqz/FZkqMsycrul9w2Qs6OjVCQ608P2IhytKxX9MwWYsRiz/GDu2/n7Ozc8vbK1N3b
      ugcps5uLmSmgttK2u0pDhhv1PZZlPGM38UrYyY8M/TzSunaXTjAn84/pCP+9GCHc2bymiJWc
      i6w9VUMJbBsh80sJ3k4eZN6f4sTC5iZcVeLRCzzuaObLTT149NUjLrF8iPjSEZ4+cMuylKtT
      917bnSS1k0D1zbpNpizT+ZIoG1XWsruR10Qd48Iexm2mNbt0KkW80ObC17J+74GU0VG8mCb7
      thHDj69tGu/1ZlssFJBNJ0mFA7hEiIkHsQAXl2LY83PIGmh3bv5c5Wh5JObnyNKKQJFcEpaO
      8NMdH4FLY9zS6qMhL5FLL1E02UsjN8PtDBtm6Le0LR/nNqeJ0QisX10X2lt5WmdEr2/nkizz
      lYMTNVExmJN5K5vkNb2Mr60Z3zqfQ8roME4lyIWd7Dgf5K6FAFAqvHJPfBK9p/5UihvNthAy
      POUnMBfAaNbjcJYWcMobHEQMDgBGpSwOXZRcap4Wx+ai5+OOZu6zuPjL4BjBXGnYL5JLgv55
      Ltx6L7qhCAONLuKTp8l1HMBpttGj6SPKJaANl2AgLUk0NJqJF8zrputCeysv6ZykxBYGW1N8
      qbf6ho6yiOdFMDS71hRRyujQ+gs4FjK0nZOqJKwkMzSM/n5lCrktUrb/XABNcgeG7C78k2kK
      kovpiZVolC0aCOU8RIW9jEo7CGXdm2pvevRCTdsykkvy8+DLDA/YSM4tVKXu1p5PMK0vRbVu
      i5W8qCOZLrUz14qOhfZW3tR5GG/sZbAtVZOi38om+GtdkgttLgzu2jailNGRi4A06sD7bJbP
      /v1FHn1p6rKM9VHyFNotHyHTqRQz/nFsWSPTFxbRCya0ch6RA6SCRuKpKUQLoE/jcDYsyxnC
      w7Q/S5clRp91/dGOcrR8KjzNcCZJSpvjR6GjcOA+PjYcpaHBSS69hNlkZynTTVg/i8tgYDKd
      o7nJTpT67cdCeyuv2J2cKTr50z3Vhctb2QTnjRBtsbI6phsyKYp5I9p5gY6TYQYX0ljilzb9
      O0u+fpTGL/ybTe//q2TLCymlkhhaBSSKNGidFDMF4oEljFk94bKgzlI/YF7nJJ6aRKOTcLhN
      tNsN5HHzZsSNVbqERYQeV/3Rj3IXUbltqdWkeS3+ImMtd/DFhShp+TTW3ffxUMN9TES/i0vY
      B6QJmZponZ+tEdLU0cU3DHZyooev3Ta5vH1JCz8iQbSldjpEMW9EntYweHyGjgU9lnji6n9v
      Q0OKXGFtywuZTq2kXqmQBQMYWgUKgLnLQjFTxJAvEo7EiY5H0Wa02J3NzPjjWBt02F02tNIo
      BucOZErFkMskk06G6hZDq6Mlwtv8lXU/X0yUuoLaOvcznnZywGLh5zMBukwB2lela12Hl++I
      LnZ3iHymtyTjkhZe08ucN4IgrMhYlnDve3P0TsrXJGEl+WDoAznPB802EHL9kQ+NUUOcDAaz
      gKEVRK2BdDpNLlSkkBfwX0yiF7uYmY1jsKYQLQKpvIBR9CwXQw59DINmJXKujpY4T/Ok6U6+
      EFxA07TEQc+HyM+VOsAjMYH7K4TMdPTwusnLo/1+9jbHWdLCOSO8rpcRBAGBkoTidALfSJ7+
      CwsfmISVKHXhqi0v5JUiFbJojBoMrQJJctAM2UwaIWskGSuSDumwRCygzdHYamQ0kcPh9mDQ
      lORsKE6hFUod35XR8rjmGHju5ncnS6n73fwxXIIBsWKocLixmanWNn6jL4hogdc0Mm+aQRAE
      ChkT8lSBrrNxdo9M0yjVX7Lvg0IV8johpa9udKYSjVFD1ljAYC11aEtIFDNFJhZS6A12CjN6
      IotRunbtZFTS4XbZcOiiuA2hVdHyGLqGB/ni3BBmi4uORg3Nl4cKhxubSexv5eNdE5w3wptm
      KBRNaBcK9FyI4hkv0BFcvObPstXZ8kI2n34P7fQ0WYsFvUkEIGsxk9Zq0ZtEJJ2OtPbKe7fK
      URQgQR6908NUcgmt1ExeFpmIyVhdXaSNRfbZ5iqi5dt833KATwr3kw8dxT3vZ7TJSmDAR/uu
      EH+LDmM8ze5383jGkzdMQjVCXifkk2ew1PnlVvbYVYpaem0irdUuvy7Ja1p+Xf6as1qWZdYY
      NeiMOrBDkgy4XMQyRcyywIjkQx8L0unM8J/cTt5NT/L380v4RIF0lw8edpDP+0mfldh3Ns/O
      aOx6/To2jVrUXCc285eeS5fmtmguf80DwuV/AButyqM3icsRN63VLb+uFFzSaZlKOcgWHLgs
      rdwmzHFB8ONrkYk+u8SD/g++MLkW1Ah5nYgPtmMOjjPvcOExymQyGVK2BjKZDLkmC44C2IiT
      tjUQR4dDk0BjtaEt6GgkyntFJ22CzHS0gMlgJpA2YJVSLNBLQU6Rz9to1GVJhSVy2mZckoRB
      p6FNqyEbCeMvptDZinSYNIhyELc2yVRwDKPo4o6IzPOtt/CEdZ6YwoRUx7KvE+2P7SIY0jCQ
      z2EvQCBtoCinSIrdhPJOQoFppsRuJvylxx4E0q04kAnmnWgEN9ZcniaLBmdei6tYwBBdotNh
      ojMjk43KQBqAvGhEkhbwF1MkDDkiFgGLT8NjLje5tEQgHmcmN8xYR45caAfFqIm7tWdYGJnk
      6/0t/FlvN7HRcWKjEzful1WBzuPeeKcbwJYX8mfTOznzTpBgwUEo78RlBIp6nAY9TSYBa6EF
      j2xityDTpC1ilJPotQYoyGSDl288WPVEj6yUJEmWRDHLklhgKZ9A1uQ46HMyKJiWl97LpSXm
      AkHOFWJIrSO0RGcIXDxMuuNW7j3zMsKtRfqa+xg9d5anOtv5ra5efD4vybl5xYipNLa8kG1a
      C00d+7Hmcnh0RbLhFFDAkEuSqrihtkwRqDc4mCSLv5giQJpEMUtWyNJtsXKry0mPpb1q31xa
      Ijk3z/nCEjM7s7jlNzEGBpktfhz9jgH2XhzHqV/C4C7SUujifcsYubFJ/ke7ji+1NeAwdWPx
      eVk8N0wmcmPu4FbisCFsAyF3aXMEhkojIZU9kmvPxyvJlzfq8JMiUEwzKYVxCYaSgBbrmo/5
      yKUlYqPjTIUjzN8qExcncFtdFCZ6iSU9eLu6mF0MoZmbRGc3UJQXSfQ20zPqZEiS6PfP8FW3
      ns/pnOwwQfPtB5DCUcLnh5cLr5udLS+kocG24T6ro1+AFK68AadBYIfFwsO+7nVXwM2lJRbP
      DRPO5Tjd7yU3eIF2TQj3Uo6CX2Yq30uP7x5+UEjysaAWbyKIuKuBgpwkKHppavRAZIFhitzz
      zjBPPnKILwfmcBl9iA1OfIfv+pW3L9Wi5johrBIyL+pIFrOEpDgB0oQdEL3c71eOgo+5mjdc
      gjmXlshEoiRm5wnnckx3uxjtTtMV/wnGLJgsO7gU86Ev6Bjse5Rvx07x6UQLWv9pAIw+E4XL
      Idvav4POmVkmpTC/tIjccew8n+/v4XezAX7d0ASAo7eUxn9V7Uu1qLlOWHpbmTNmCJAilE4Q
      qLj7xyUY6NFY6WlrxSkIm1oHvCxibHScmF7PdLeL2b4sLZGf0xUHyd1B31yME0MiekHHzv6P
      8MP4BT5mbyAxkWRXIkjSZiXqEbCcD2GWFogLTgZ8PibHSjMXR7Mynz93iW/07cJtWOIuSrfH
      6U3ir0RMvcejtiGvJ5OtesYvBXAJBlwYuNXpottq2ZSAZcqFSnJugZhez2j/Tt7Z6eFg+G9p
      iUTIGs30xpMkp+28He7AIBi4bfBj/NPCGG1uEcYcNKVKq0PorHqaihnKt1UERS9dZoFG0cai
      FCeu0zEqy/yHs+/x1P5Osj64JabHlS0til8p5vUofJQaHWGbCPnQPfcSldJrFiPrURaxHI3G
      dvby/t52pNRp7gp8FwBjEexiI9lAM+dCRqwmA3vbHuTlhXkueAr8TsBMKLaIK1R6MkPG5wRK
      83A8sTNMii1MNzezazHBsfnSlIY5wQBylk+MhviqVs/ntI08YlyREkpiXo/CR6nREbaJkD37
      D8DJd6/omNUiJm1WTtzdT9Y6TWf4G8v7Se4OBsMysxeynEw0oUWk3/sAl0jxC/08n5PMBMLQ
      uXhh+Rijz0Tx8vOzzVJpFbW8s4Vu7QxDTsdym3ZOMOCLRHks0cIPG+IEkgK/l9VisWiq3usH
      XfgYB/qv+RzXi20hJABWW+kJXRtQ7ropL7eXtFl5Z+8A0y05+iLP0BgpnaOcohvH5jmau4dE
      Io4WkTv3PIZk1fGD6TEe3NWCOOIhl5rBnphfPp/Fa6IQKbVlzZnS1IWg6KXba6Rn1MFJVm6u
      eNdm4bHTZ1m88zZeM8u05KMc1LTRW6x9oPYH0b5UcvsRtpOQfX11n85VJjm3QGJ2frk9lrRZ
      Ge3rYWRfB87QCxyMrBxbTtGNwSxvpfaTSJZkvHv/x8il83xn7gLtTSKHFqxcCixiik8sHyuL
      Mv2aJTJ1ZjVOOTz0mLIMpQNVi5k+2+jksbfeRbptPz82CkQTI6R8+7klVjv+Xdm+rPzD2ixK
      fyD89hHSWtsfWdl1U0/EhqV3GZj8btUxkruDff4AUrDIc6n7IRlZltGY0/H90HkS9hyfNzcx
      Ow5CLs3u8MokrYy3NBGneFlIT2xlLZ+8swWxwc+ugpczC9Urkb3qtPF7x47zrdv381NrB6Hw
      WYy6XeykeinoMnqTSONgP47e7isqfJScrmE7Cdm3Ey5egIX5qoq5XAiURRzu6UQovk/b5Dex
      s5Lis0YzO4sm2ucDvF/Yw5kZgAhGwcZgz6/hbfbx15fOcLpJ4PGGBqSZRtLJharoCFDwlJZu
      LsilGrvchoRS2u7xDtOz6GD1klNxnY5nG5382+On+Z8HBvmFsxVJGOZThX30alKYCoW6H/tK
      Ch+lp2vYJgsFlMm1ldYHn3vjTWKjE8v/OWM7e3nxYw/zzk4PLUtPszPykyoZjUVoFBtxpXWc
      DTsvywhGwUZH0076mtt558wpXiimuN+ioT/WRDi4iJBL0xqrfuahq7Ox5n1VSrmQFdHJSVrq
      rMczJxh4ttHJH1yawGESeVdq5+f2UY4GEkQM68eOcuHj6O1ac5+GL/zBuudQAttKSP3evUjG
      lbW8kzYrLz36YU7c009h6VXuCnwNd26q6hjJ3cEeczt7glHOJ3wMJVqBkoxWg4+DvXdwemaC
      b9pz9BbnuAM70YU8OTmLLj6BLZ+vup4nV5KvWNGGLBc2AJMFF6LXxq2ujrqfYU4wMFws8F/f
      eBuHSeTVkItX+tL8NJjaUEooFT71xNwK0RG2mZAAjiceJ2mz8ub9d/P9x38d0T5C2+Q32SX9
      omq/rNGM4Orgw/MBiv4FnonczURoZdllq8HHw7c9xNjIGEcKAdBl+DW3EzHVSzwaqxsdJa+T
      BlNpmZbKpVosFRFysuBC6xVwTibqRkkoVd6xTIb/eOocDpPI2YCNYG+IF+MFZmRd3WMqKRc+
      vsN3YfG1AFsjOsI2FFIcGODNz/8OJ9wG2qe+iWvhZ1XpGcBkMNMoNnJoZoJ4Os/r4V1oEytz
      TJqde3jg9oeJT0zxU0OIYQ38uiVBd7qfwGxJLkt2oSo6AizubK37nipTdmdnCwtZkWxDgU6x
      Yc3P8Wyjk/ximD88fhqHSeS1BTenGmdJW/xczG1uwaxy4eP71Ce2RHSEbSgkwIPtjTwQ+Sat
      1N4PKbk7aLe1s3dukqPFwzwTvINk3rj882bnHg7vf4ClQICfiGmOGWCPMM19hjYycYF0MoWQ
      SyOEalfLtZhKFXFRrl68oDJlQylKyt4ivowRp9Ox5ud41WmjI7jIHx4/jajXcybayP/WJslp
      RzkpbH6NQf1d92x63xvNthSyy7eb1p2/UbUtazQjuTu4wx/AGowQtN6O3y9hvjxFAaCr9XYO
      738AORThTGiSZ7MxtJo0n+tsJx7rWY6OjboIPrn6jsukzUqrqzTCsnpltcoICSUhHc4GzHKW
      HS3VN/9WUq68O4KLfNZfmpQ1nvDydX2RonSRV+X6XUJV9O0Er3fj/RTCthQSoO/gF5a/L6fo
      D01OICUNjIe0vLZqsbCu1tsZaD+AvljgRGiKv/eU0uLjtnk0wR2EA6X505miTGGmdhVaWZSX
      C5rVQlb2RUIpbUck0HiNtMf060bJOcHAq04bt783xG9e/iOYzHj5O3OO09oE57LC2sWO1QYH
      bl3z3Epk2wppsvm449G/RnJ3gKuUopN5Iz/PPLhcSZfxenYz0H4Au1HP2fFLPOczEktL7LQt
      cljXhxwXiF8ef64XHaHUIW4y1D7Fay1yTi9ar4DJn8bb0rLuviMmkRGTyAO/fIcPXZ4nfiHe
      yJwhwg/lBS7GtLVSWm1w+P66AwZKZtsKCdDgu53HDv03Do4Pk8wbGRIexLRUXRl7PbvpbT6E
      3ajHf+IszwsxLkajNBvyPNHSRCI9WBUdLZP1n4hV7hAHyCdq5zzXpu1SG1DjFejW2BFFcd3P
      8qrTxpxg4ImX31iW8rzczpAdjtsXGUlrmDOutIXp69tSqbrMthYSQNd2O9F9f8QzwTuYmK1e
      rcFp7aG3+RDd7W7CwRDP9Zp4u5DHTpzHPIvYg92kkynSyVIK9ib8daNj0mbF6DPVbK9kddrO
      O71EJMi6Ctgmk3R3dW74WZ5tdNZImZKsvFrMMmUe4/2Fed7Xi6U0feDghudTItteSID2B3+f
      np7q/3AtIoNd99Ld7sY/OcML0gIvX372TKdxnp1yNwXJslzIZIoyNmmq5twACauFTs3Ks2iK
      m3w8Sc7pRfTa0FGkQ9zcvZyvOksp+KPvnOJwvjScmJKs/DBvAd8cUpNpy8oIN4mQAP/iD75E
      S89uoCTj3YOforvdTWzaz4m5CV40FZByOQYtaR5u8ILcv5yqATzJIA1L9W9vy/hKHeJATad4
      mdUpGyB+uesm6wOzX1qzo7zqmMuVtyWe4OOnztJx+dk0KcnKP9r2sv8jT2x4DiVz0wgJcN+n
      fg9HQxuH+j9Jd7ubbErifHSe53wCsbSEaMzziGOOpvQB0snUciGTKcq40hNrntfvXL/9B7V9
      kVC62SIiganbgcmfZrBrx6Y+x5xg4F1r6ckOf/zCazTbbDTbbPyX+z+1qeOVzE0lpNXl5qO/
      /yV27u8im5I4OXSef3Llmb58b+Itxou0yHspSJZNR8ekzUqPb2Xpi9Wd4mXqRUiAJaEU4eTL
      bcnNREkoDS/OCQYs8QR/NDHD3/zWb9Ns21oVdT1uKiEBzC4r+v09ZGwiJzoEzidLAt1iXeQT
      jm6Q+6sKmY2iY8JqodG08aSp1UVNmbyz1OUjem2Xu4A2JySUihztb36KA3/yJ5s+RuncdEKW
      cR2+hT37Sp3GojHPI40hNPE9ZOXsciEDIEqLa0ZHgIhHWO4QB8glrmzdxXLa1noFMmTwbjCc
      uPz+Gxp46JGP0PYvP35F11M62+cG3avgQ7t202Sz8YtjX6E5eQgKThZmp5d/ninKHEhMr3OG
      UkFjMqTX3aeMWVogJdZ2gi/kRFxIaH1GbJNJvB0tyxPB6uFqaODxz3yWnh2ba3NuJW5qIQH2
      +loZ/PCfEposMvX2xeVUDaXoaFwKr3ls0mat6hCH+p3iZcpTYlezZHAB88jeIpa5PB2ii/mK
      2YmV3HroEA898lFcDWvfKbSVuemFBNDaW2m6BaxtTjJHZELjfjJFmR1S7XMCK0lYLXSwxMpa
      vFfHZMHFHczjcDaQMgUw+yW8LdVRsnvHDh565KPbMipWogpZgdll5Z7PP0IqkmxGdX4AAAHJ
      SURBVOD40z/GPbZ+ezDiEbhNswSsFDXrdYq7Y2eYbH6kZntnZwvDY2P0WyXEbieFoSStnW7G
      xUlMZvO2Tc/1UIWsg9ll5f5/99tID95G+Mlvr7ked9DbToOp+iGXV/sQ+XLa1noFCkNJPMEi
      n/tX/5qenbuu6nxbFVXIdRAHBvD91dfIBYMkXz9K8vWjVXLqXAtUdlRsJONafZFQStv3mpZw
      tHVj2ufB0rr+HUDbFU2xWCxuvJtKmbKc0tAQcweTHDCvtB/ziSCpS2+se/yPD7+8/L1V0GE1
      6uhtFGmxCViNG8+X2e6oQl4LUhSkSOlrOkpBTiFPHKOwNEdxaZbC0hxauw+NvRWtvfTY9ZmD
      XwbAatTRYru2Ymg7ogqpoihu2pEaFWWiCqmiKFQhVRSFKqSKolCFVFEUqpAqikIVUkVRqEKq
      KApVSBVFoQqpoihUIVUUhSqkiqJQhVRRFKqQKopCFVJFUahCqigKVUgVRaEKqaIoVCFVFIUq
      pIqiUIVUURSqkCqKQhVSRVGoQqooClVIFUWhCqmiKFQhVRSFKqSKolCFVFEUqpAqikIVUkVR
      qEKqKApVSBVFoQqpoihUIVUUhSqkiqL4/0LzhjssUqhkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Class Dashboard' width='192'>
      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
      FQJuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Class Hierarchy' width='192'>
      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
      FIBJVvP/A6uJURpKcJ9oAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Deaths Class Pie Chart' width='164'>
      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
    </thumbnail>
    <thumbnail height='164' name='Deaths Pie Chart' width='164'>
      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
      lAjF/wN73OARv0f1UQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Disease Dashboard' width='192'>
      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
      WPl/30R8af2v68QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Diseases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Top Afflictions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Afflictions Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Top Cases Pie Chart' width='164'>
      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
    </thumbnail>
    <thumbnail height='164' name='Top Deaths Pie Chart' width='164'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
