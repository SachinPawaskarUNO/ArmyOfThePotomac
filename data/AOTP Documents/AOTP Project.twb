<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0615.1128                               -->
<workbook original-version='18.1' source-build='2018.1.2 (20181.18.0615.1128)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='30'>
        <calculation class='tableau' formula='30' />
        <range granularity='5' max='30' min='5' />
      </column>
    </datasource>
    <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' inline='true' name='federated.0htu0bv1fgj03y1h899z019l0bbb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Pivoted AOTP Join' name='excel-direct.1tnlqc8052tacg17l9nbr1tp8oiq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/chaas/Desktop/AOTP Documents/Pivoted AOTP Join.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1tnlqc8052tacg17l9nbr1tp8oiq' name='Pivoted Join (2)' table='[&apos;Pivoted Join (2)$&apos;]' type='table'>
          <columns gridOrigin='A1:R10001:no:A1:R10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Event Name' ordinal='0' />
            <column datatype='integer' name='Local' ordinal='1' />
            <column datatype='real' name='Latitude' ordinal='2' />
            <column datatype='integer' name='Pivot1 Values' ordinal='3' />
            <column datatype='real' name='Longitude' ordinal='4' />
            <column datatype='string' name='Date' ordinal='5' />
            <column datatype='string' name='Month' ordinal='6' />
            <column datatype='string' name='Key-1' ordinal='7' />
            <column datatype='string' name='Class' ordinal='8' />
            <column datatype='string' name='Order' ordinal='9' />
            <column datatype='string' name='Affliction' ordinal='10' />
            <column datatype='integer' name='Year' ordinal='11' />
            <column datatype='string' name='Deaths and Cases' ordinal='12' />
            <column datatype='integer' name='Battle Order' ordinal='13' />
            <column datatype='integer' name='Day' ordinal='14' />
            <column datatype='string' name='Key' ordinal='15' />
            <column datatype='integer' name='Parasitic' ordinal='16' />
            <column datatype='string' name='Location' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Event Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Event Name]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Event Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Local]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Local</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot1 Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot1 Values]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Pivot1 Values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Key-1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Key-1]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Key-1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Class]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Class</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Order</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Affliction</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Affliction]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Affliction</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths and Cases</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Deaths and Cases]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Deaths and Cases</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Battle Order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Battle Order]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Battle Order</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Key</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Key]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Key</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parasitic</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parasitic]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Parasitic</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Pivoted Join (2)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R10001:no:A1:R10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
      <column caption='Top Diseases vs. Other' datatype='string' name='[Calculation_2034501150461566976]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Top Affliction by Number] THEN [Affliction]&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;End' />
      </column>
      <column datatype='string' name='[Class]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Unidentified' />
        </aliases>
      </column>
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
      <column datatype='string' name='[Event Name]' role='dimension' type='nominal' />
      <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Local]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Order]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Unidentified' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[Parasitic]' role='measure' type='quantitative' />
      <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_2034501150461566976]' derivation='None' name='[none:Calculation_2034501150461566976:nk]' pivot='key' type='nominal' />
      <column-instance column='[Class]' derivation='None' name='[none:Class:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
      <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
      <group caption='Action (Disease,Class,Deaths and Cases,Order)' hidden='true' name='[Action (Disease,Class,Deaths and Cases,Order)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Affliction]' />
          <groupfilter function='level-members' level='[Class]' />
          <groupfilter function='level-members' level='[Deaths and Cases]' />
          <groupfilter function='level-members' level='[Order]' />
        </groupfilter>
      </group>
      <group caption='Action (Event Name)' hidden='true' name='[Action (Event Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Event Name]' />
        </groupfilter>
      </group>
      <group caption='Top Diseases by Number' name='[Top Affliction by Number]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Pivot1 Values])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Affliction]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Class, Order'>
          <field>[Class]</field>
          <field>[Order]</field>
          <field>[Affliction]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.633394' group-percentage='0.0490018' measure-ordering='alphabetic' measure-percentage='0.264973' parameter-percentage='0.0526316' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2034501150461566976:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Contusion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Typhoid&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abscess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diarrhea_acute&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Piles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Fever_remittent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fever_Malarial&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Diarrhea_cronic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Catarrh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Inflammation_tonsils&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Other_Miasmatic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Measles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rheumatism_acute&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jaundice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fever_tertian_intermittent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gonorrhea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other_Respiratory&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dyspepsia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fever_quotidian_intermittent&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Wound_gunshot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Constipation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dysentery_acute&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neuralgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rheumatism_chronic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Headache&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Epidemic_catarrh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bronchitis_acute&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syphilis&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Deaths and Cases:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1861 August Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1861 December Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1861 July Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1861 November Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1861 October Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1861 September Cases&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 April Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 August Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 December Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 February Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 January Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 July Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 June Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 March Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 May Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 November Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 October Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1862 September Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 April Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 August Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 December Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 February Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 January Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 July Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 June Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 March Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 May Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 November Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 October Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1863 September Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 April Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 August Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 December Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 February Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 January Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 July Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 June Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 March Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 May Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 November Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 October Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1864 September Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1865 April Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1865 February case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1865 January Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1865 March Case&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FY1862 Total Cases&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FY1863 Total Cases&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FY1864 Total Cases&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1861 August Death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1861 December death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1861 July Death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1861 November death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1861 October death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1861 September death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 April death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 August death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 December death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 February death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 January death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 July death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 June death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 March death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 May Death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 November death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 October death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1862 September death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 April death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 August death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 December death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 February death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 January death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 July death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 June death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 March death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 May death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 November death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 October death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1863 September death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 April death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 August Death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 December death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 February death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 January death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 July death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 June death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 March death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 May death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 November death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 October death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1864 September Death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1865 April death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1865 February death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1865 January death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1865 March death&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FY1862 Total Deaths&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FY1863 Total deaths&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FY1864 Total Deaths&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Class:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wounds, Accidents, Injuries&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Parasitic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Local&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Zymotic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Constitutional&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Key:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;July, 1861&quot;</bucket>
            <bucket>&quot;August, 1861&quot;</bucket>
            <bucket>&quot;September, 1861&quot;</bucket>
            <bucket>&quot;October, 1861&quot;</bucket>
            <bucket>&quot;November, 1861&quot;</bucket>
            <bucket>&quot;December, 1861&quot;</bucket>
            <bucket>&quot;January, 1862&quot;</bucket>
            <bucket>&quot;February, 1862&quot;</bucket>
            <bucket>&quot;March, 1862&quot;</bucket>
            <bucket>&quot;April, 1862&quot;</bucket>
            <bucket>&quot;May, 1862&quot;</bucket>
            <bucket>&quot;June, 1862&quot;</bucket>
            <bucket>&quot;July, 1862&quot;</bucket>
            <bucket>&quot;August, 1862&quot;</bucket>
            <bucket>&quot;September, 1862&quot;</bucket>
            <bucket>&quot;October, 1862&quot;</bucket>
            <bucket>&quot;November, 1862&quot;</bucket>
            <bucket>&quot;December, 1862&quot;</bucket>
            <bucket>&quot;January, 1863&quot;</bucket>
            <bucket>&quot;February, 1863&quot;</bucket>
            <bucket>&quot;March, 1863&quot;</bucket>
            <bucket>&quot;April, 1863&quot;</bucket>
            <bucket>&quot;May, 1863&quot;</bucket>
            <bucket>&quot;June, 1863&quot;</bucket>
            <bucket>&quot;July, 1863&quot;</bucket>
            <bucket>&quot;August, 1863&quot;</bucket>
            <bucket>&quot;September, 1863&quot;</bucket>
            <bucket>&quot;October, 1863&quot;</bucket>
            <bucket>&quot;November, 1863&quot;</bucket>
            <bucket>&quot;December, 1863&quot;</bucket>
            <bucket>&quot;January, 1864&quot;</bucket>
            <bucket>&quot;February, 1864&quot;</bucket>
            <bucket>&quot;March, 1864&quot;</bucket>
            <bucket>&quot;April, 1864&quot;</bucket>
            <bucket>&quot;May, 1864&quot;</bucket>
            <bucket>&quot;June, 1864&quot;</bucket>
            <bucket>&quot;July, 1864&quot;</bucket>
            <bucket>&quot;August, 1864&quot;</bucket>
            <bucket>&quot;September, 1864&quot;</bucket>
            <bucket>&quot;October, 1864&quot;</bucket>
            <bucket>&quot;November, 1864&quot;</bucket>
            <bucket>&quot;December, 1864&quot;</bucket>
            <bucket>&quot;January, 1865&quot;</bucket>
            <bucket>&quot;February, 1865&quot;</bucket>
            <bucket>&quot;March, 1865&quot;</bucket>
            <bucket>&quot;April, 1865&quot;</bucket>
            <bucket>&quot;FY1862&quot;</bucket>
            <bucket>&quot;FY1863&quot;</bucket>
            <bucket>&quot;FY1864&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='30'>
          <calculation class='tableau' formula='30' />
          <range granularity='5' max='30' min='5' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Disease Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Deaths and Cases' />
        <param name='target' value='Disease Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Class Dashboard' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Class Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases Class Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases by Class</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column datatype='string' name='[Class]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column datatype='string' name='[Event Name]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Class]' derivation='None' name='[none:Class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order]' derivation='None' name='[none:Order:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]'>
            <groupfilter function='level-members' level='[Event Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='level-members' level='[none:Deaths and Cases:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' />
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Order:nk]' />
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Cases Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 September Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 February case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1862 Total Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1863 Total Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1864 Total Cases&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Class Hierarchy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Diseases by Class</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column datatype='string' name='[Class]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column datatype='string' name='[Event Name]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Class]' derivation='None' name='[none:Class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order]' derivation='None' name='[none:Order:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]'>
            <groupfilter function='level-members' level='[Event Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' direction='DESC' using='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
          <computed-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' direction='DESC' using='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
          <manual-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;1863 September Case&quot;</bucket>
              <bucket>&quot;1863 September death&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <alphabetic-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Order:nk]' direction='DESC' />
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk] / ([federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Order:nk] / [federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]))</rows>
        <cols>[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Deaths Class Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths by Class</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column datatype='string' name='[Class]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column datatype='string' name='[Event Name]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unidentified' />
              </aliases>
            </column>
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Class]' derivation='None' name='[none:Class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order]' derivation='None' name='[none:Order:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]'>
            <groupfilter function='level-members' level='[Event Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='level-members' level='[none:Deaths and Cases:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[Action (Event Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' />
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Order:nk]' />
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Deaths Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 August Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 July Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 August death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 May Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 August death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 May death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 August Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 May death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 September Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1862 Total Deaths&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1863 Total deaths&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1864 Total Deaths&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Diseases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Affliction]' derivation='None' name='[none:Affliction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' direction='DESC' using='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</rows>
        <cols>[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column datatype='integer' name='[Battle Order]' role='measure' type='quantitative' />
            <column datatype='string' name='[Event Name]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Location]' derivation='Attribute' name='[attr:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Event Name]' derivation='None' name='[none:Event Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Battle Order]' derivation='Sum' name='[sum:Battle Order:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]' field-type='quantitative' max='-7548877.8161358824' min='-9501488.8379390109' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Latitude:qk]' field-type='quantitative' max='5135700.6338867107' min='4298867.3388282275' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Event Name:nk]' />
              <path column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Battle Order:qk]' />
              <tooltip column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[attr:Location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Latitude:qk]</rows>
        <cols>[federated.0htu0bv1fgj03y1h899z019l0bbb].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Afflictions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Diseases&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Top Diseases vs. Other' datatype='string' name='[Calculation_2034501150461566976]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Top Affliction by Number] THEN [Affliction]&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;End' />
            </column>
            <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2034501150461566976]' derivation='None' name='[none:Calculation_2034501150461566976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' direction='DESC' using='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]</rows>
        <cols>[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Cases Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Cases&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Top Diseases vs. Other' datatype='string' name='[Calculation_2034501150461566976]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Top Affliction by Number] THEN [Affliction]&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;End' />
            </column>
            <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2034501150461566976]' derivation='None' name='[none:Calculation_2034501150461566976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 September Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 August Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 December Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 February Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 July Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 June Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 May Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 November Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 October Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 September Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 April Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 February case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 January Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 March Case&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1862 Total Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1863 Total Cases&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1864 Total Cases&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Top Deaths Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Deaths&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Diseases' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <range granularity='5' max='30' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
            <column caption='Disease' datatype='string' name='[Affliction]' role='dimension' type='nominal' />
            <column caption='Top Diseases vs. Other' datatype='string' name='[Calculation_2034501150461566976]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Top Affliction by Number] THEN [Affliction]&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;End' />
            </column>
            <column datatype='string' name='[Deaths and Cases]' role='dimension' type='nominal' />
            <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[Pivot1 Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2034501150461566976]' derivation='None' name='[none:Calculation_2034501150461566976:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths and Cases]' derivation='None' name='[none:Deaths and Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot1 Values]' derivation='Sum' name='[sum:Pivot1 Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 August Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 July Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1861 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 August death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 May Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1862 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 August death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 May death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1863 September death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 August Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 December death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 July death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 June death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 May death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 November death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 October death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1864 September Death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 April death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 February death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 January death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;1865 March death&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1862 Total Deaths&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1863 Total deaths&quot;' />
              <groupfilter function='member' level='[none:Deaths and Cases:nk]' member='&quot;FY1864 Total Deaths&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Key:nk]' member='&quot;October, 1864&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</column>
            <column>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' />
              <wedge-size column='[federated.0htu0bv1fgj03y1h899z019l0bbb].[sum:Pivot1 Values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Class Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Diseases by Class of the Army of the Potomac&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
      </datasources>
      <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
        <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
        <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6250' id='16' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91750' id='13' param='vert' type='layout-flow' w='98400' x='800' y='7250'>
              <zone fixed-size='68' h='9500' id='6' is-fixed='true' mode='slider' name='Map' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' show-all='false' type='filter' w='98400' x='800' y='7250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='82250' id='5' param='horz' type='layout-flow' w='98400' x='800' y='16750'>
                <zone h='82250' id='3' type='layout-basic' w='78400' x='800' y='16750'>
                  <zone h='41114' id='1' name='Map' w='78400' x='800' y='16750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41136' id='7' name='Class Hierarchy' w='78400' x='800' y='57864'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='200' h='82250' id='4' is-fixed='true' param='vert' type='layout-flow' w='20000' x='79200' y='16750'>
                  <zone h='30937' id='8' name='Cases Class Pie Chart' w='20000' x='79200' y='16750'>
                    <layout-cache fixed-size-h='245' fixed-size-w='181' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='155' h='20375' id='9' is-fixed='true' name='Cases Class Pie Chart' pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' type='color' w='20000' x='79200' y='47687'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30938' id='10' name='Deaths Class Pie Chart' w='20000' x='79200' y='68062'>
                    <layout-cache fixed-size-h='245' fixed-size-w='181' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='11' name='Class Hierarchy' pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' w='18400' x='58000' y='58625' />
      </zones>
    </dashboard>
    <dashboard name='Disease Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Diseases of the Army of the Potomac</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
      </datasources>
      <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
        <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
        <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='12' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6250' id='13' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='87' h='11875' id='6' is-fixed='true' mode='slider' name='Map' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' type='filter' w='98400' x='800' y='7250'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='79875' id='5' param='horz' type='layout-flow' w='98400' x='800' y='19125'>
              <zone h='79875' id='3' type='layout-basic' w='81100' x='800' y='19125'>
                <zone h='39936' id='1' name='Map' w='81100' x='800' y='19125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39939' id='7' name='Diseases' w='81100' x='800' y='59061'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='173' h='79875' id='4' is-fixed='true' param='vert' type='layout-flow' w='17300' x='81900' y='19125'>
                <zone fixed-size='290' h='37250' id='9' is-fixed='true' name='Cases Pie Chart' w='17300' x='81900' y='19125'>
                  <layout-cache fixed-size-w='160' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='8' name='Diseases' pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' w='18400' x='62100' y='58625' />
        <zone fixed-size='301' h='33250' id='10' is-fixed='true' name='Deaths Pie Chart' w='17300' x='82200' y='57500'>
          <layout-cache fixed-size-w='160' type-h='fixed' type-w='fixed' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top Afflictions Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Diseases of the Army of the Potomac</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Pivoted Join (2) (Pivoted AOTP Join)' name='federated.0htu0bv1fgj03y1h899z019l0bbb' />
      </datasources>
      <datasource-dependencies datasource='federated.0htu0bv1fgj03y1h899z019l0bbb'>
        <column caption='Month and Year' datatype='string' name='[Key]' role='dimension' type='nominal' />
        <column-instance column='[Key]' derivation='None' name='[none:Key:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6250' id='15' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='9875' id='6' mode='slider' name='Map' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' type='filter' w='98400' x='800' y='7250'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='81875' id='5' param='horz' type='layout-flow' w='98400' x='800' y='17125'>
              <zone h='81875' id='3' type='layout-basic' w='81200' x='800' y='17125'>
                <zone h='39266' id='1' name='Map' w='81200' x='800' y='17125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='42609' id='7' name='Top Afflictions' w='81200' x='800' y='56391'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='172' h='81875' id='4' is-fixed='true' param='vert' type='layout-flow' w='17200' x='82000' y='17125'>
                <zone h='9875' id='9' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='17200' x='82000' y='17125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27250' id='10' name='Top Cases Pie Chart' w='17200' x='82000' y='27000'>
                  <layout-cache fixed-size-h='210' fixed-size-w='160' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27250' id='12' name='Top Deaths Pie Chart' w='17200' x='82000' y='54250'>
                  <layout-cache fixed-size-h='210' fixed-size-w='160' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='8' name='Top Afflictions' pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' w='18400' x='62300' y='56625' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Disease Dashboard'>
      <viewpoints>
        <viewpoint name='Cases Pie Chart' />
        <viewpoint name='Deaths Pie Chart' />
        <viewpoint name='Diseases'>
          <highlight field='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Class Dashboard'>
      <viewpoints>
        <viewpoint name='Cases Class Pie Chart'>
          <highlight>
            <color-one-way>
              <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Class Hierarchy'>
          <highlight>
            <color-one-way>
              <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Deaths Class Pie Chart' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='dashboard' name='Top Afflictions Dashboard'>
      <viewpoints>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Afflictions'>
          <highlight>
            <color-one-way>
              <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top Cases Pie Chart'>
          <highlight field='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top Deaths Pie Chart' />
      </viewpoints>
      <active id='6' />
    </window>
    <window class='worksheet' name='Diseases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Event Name:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Key:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cases Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Deaths Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Class Hierarchy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cases Class Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Deaths Class Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Class:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Afflictions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[io:Top Affliction by Number:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Affliction:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Cases Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Deaths Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Calculation_2034501150461566976:nk]</field>
            <field>[federated.0htu0bv1fgj03y1h899z019l0bbb].[none:Deaths and Cases:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='164' name='Cases Class Pie Chart' width='164'>
      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
      ovwfYPtlp0tm+ZEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='Cases Pie Chart' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Class Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d5Be13Un+Hv5y6FzowE0IglG0IQYLNGyxJVlBY/HXts1Ox6t1lbNymtP
      1dRube1u1ZZnS7XrsteukWfKZYpaiRKDEiVbtkQoMYgUzRwQSJAgAILIjUbHL38vv7t/vHdu
      3/e+9zUaJAiQwverQjW+F25659x7zrnnnCsxxhgGGOAKhXy5GzDAAJcTAwYY4IrGgAEGuKIx
      YIABrmisiQFcs4Wz87V3uy0ctflzsP239+65c+cubmNYgCMHD2B2Ib3/F72+dwAW+Dh4YD8W
      aq2Uuy7OnVu85G16r6OHAZ7e/QD+4ot34Ut3/T3uuuebcC+DjWjPk49gyVnLkwz//K17cNeX
      7sbdX7oLS13gkUceuahtefYn/4gDZ5YRcGOZiQce+Ad+/0Lq+/E/fgtfuvfbF7V9In7yj9/E
      meUOuGGvdgwP7H46utvGI488t6ZyvvgXf46vfOUruOvv/w67H0t/54EHHrgILb78UNMu/u6/
      /RyuW5fFyVefxI9/sR+/84ExHDi6hLGSjHvv/SYCScHNd/wGbt4+jm9+41voOD7u/PTvYcd0
      CffefS8cScaGq2/Cpz56G3743ftxrm5jYvO1+NcfvwM/++cHcWKugW033IqPfegmfP9b92Gx
      5WL9VTfi03f+atSCAD/4zv3wW3V86Dd/ByP+LOaU9bhlx3q88PhPsfm238BYXsXsoecRjP8K
      /sO/29XTh/3PPY7nXzkCnyn4zB//MdpnDuIHDz8DWQZ+/zP/I07tfxwvvn4cyJTxp3/034Uv
      MR///OA3MFfvYuOOD+DXrpvA93/yJDbu3IlzUxswNTaEX/z0R3jhhadhWS382z/+HM4eO4iv
      fuUr6DrAn/zp59Gdewvf/cHDgGLgDz/7P6CcVXmfWp6KqayDhsNQ1iU8/PDDKMg26uoY8tY8
      Ti8uY2mxhg3Tm7C8OIeRjdfi168dxitzCj56yw4cfOFxZDbfhi1jeTDfxoPf+AbqXRs7PvBh
      XDeh4ydPvoidO21MbdiMsaESdu/ejRdeWYBVm8XnP/sxHDu4B1/5yiwcZPCnn/8slk4exvd/
      /HNIWhaf+exnUTAUAEBxbCM+//nPAwDuueceMP/mWF1Xj8h44YUXYFkWdn3oY9hY9PC93Y+C
      QcYf/Ls/glI/iu/89AUYsJAtjcAx2+j6Ov7sTz6LA4nvkmMd3H//t+AFwCd+/7/HprHixaTv
      84Ml8NRD97PXZrrRrza7997vMrb8Frv/oafYwtGX2N997XtsfrnJfN9nj/3gu+zUcpexwGP3
      3vsAYyxg9cU5tufll9lf/ef/yhgz2d/85V+zY6fOMs/32eKxPeyhX7zCGGPs2/feyyyvwf7f
      v/wiO3HmHPN9n7fh0e/dx061fMYCj33pS/8fY16X3fXlrzPGGLvnnntibX1zceU9xhi7//77
      GWOM+Z7D3njtFfbEQ99iP3jyVfbQt7/Onnh+L+taNvP9gH3l7/8Le+X1I8x2Pf7usT2PsZ+9
      cIQxxtj37/8ym2177KH772fLsRq67P77v8d/3XXXXSxgjL348IPstZku++b99zEnYMyqn2bf
      /qdH+XNLx/eynz13iC2f2Md++MR+xhhj//Wv/hN7bn9Y3/fuvYfVbI+1T7/K7n/oKcYYY/fd
      dx9jzGN33fVlxhhjX7/nHka93fPY99kLR86Fff7yl1jbW+k7R/Tdoh/srru+zRhj7OEH72Mz
      XcYeuO8+5gWMteffZN/d/RR/7e/+9m/Yyy+/zH7+s4fY1779w/PW9dUv380cP2But8a+8vVv
      sZnXnmK7n36dMcbY3XffzQLG2M++cx+btXq/yz9/6142UwvpLQgCdqmRugIQ2vNnoJZG+e+R
      rR/Ab/kZPPLDB2GMXwVnbhaH/uEb0BDOGsunDuKBH7+ID91yAyQAQAaf+9wf4plnnsJDP7Xx
      iRtH8MJTBzF7+HkAGlxWwuf+6PfxzDOP40dNCf/hc9FMDAmKIgMSkM3qgJLFVBE4evQ1VKau
      4+0ZGhrC2bNnsW14fU/bv/m1u7Hhmg/A0A04joPf/zefwcvPP4t7/v5v8ZHf+/f47B9/Ds8+
      /TS++IN/wp/9r/87yoaEhYUFbNx5BwBgw0QVtZZ33gmkUChAAiDLoTR55tgbuPerXwEAXL3z
      dv7cL558Dme6Kk6+GmCu4eO3P7IT1XXbcPvO7eEDsgZDVwBZRjabDUdBkgAouHaqiINHj0Kv
      THGZdWGhjZ13jAEAJqoFrKGpKBQKYVVy+HVOvvkqvha19bpdd/Q8P7XtRnx06zQeefCBVevS
      MllosgRkK8ioofKWyWQAALlcDhIARZEQBL3fxXQlTFbE/l5apCrBhw7swzP/8jjuvv9H+PQn
      f41fnzvxBl558yymN22C2W7j9tt2AUoBN+28AVldhWN3oWcKaC7NY7HeAtwmHnn8eUxMbUTg
      2thy/S7kNQk7b7oJlUIBsrOER556Ges2TMN3TKEFPl567lk8vPsfoJanAAAf/+TH8Dd/fTfu
      /Mit/Klrbv8YXv7xA3jiqWfxyI9/gKXuSgmm4yGryzh2/AQA4KWnf4FOoGPd2BC6lo0nHnsE
      2fIIyjkVjh/KzDfcegd+9J178MJzT+OJV+ewbdxIGR0d8zNH8OILL6KbQnQ3Xn8tRtdvwbVX
      beGEBvhooYj/+Kefx+c//z/h2okMlsy1a/m/9vFP4u6/+WvccedH+LVb77gF37nn63ju6Sfx
      6pyF1KZmyzj9+ot47uX9qeXecN21mJjehh3bNnEGBgAjX8auXbtw9dZpSH3qKikuHn3yGZyc
      mcd4XsZDDz+Oh753P6obrkuti5D8LrdfvwlffeB7ePZfHsfJ+eaax+SiIbkk1Bdm2csvv8xe
      ee0N5vnRkuR02exCnTHG2JkTR9krrx1idGth9hTbs3c/69qhKHHq2BH21skZNjs7G5a3NMf2
      7N3HOpbLGGOs26qxPXv2sIVakzHGWG1hlu3Zu5+Zzooo02412ZtvvMYOvXVypWGexe75+gM9
      S1jgO+y1V/axN0+cYYwxXq/VabC9+15hnXaTzS03WeB77OCB/ez46fC+Y7bZvr172NxyI1Ze
      u77I9u5bac/C7CxzEnU2lubYvv0HmBus1NdcnmNty2OMBezYkYPswMEjfIwC12Sz88uxOmot
      i7/LGGNzs7PMY4x5VpvNLTdjfWHMY/fc8/WevtcXz7F9+w8wJ6pILI+wcPYUe+XgEcaYw2Zn
      FxhjjC3PzTLLY4yxgB099Bp77dBRJkofMzMz560r8B326r69bKHWYowF7K3Dr7O3TobvWe06
      W252Y22iOpPfhTHG5s+ejNHUpYTE2PvAF8ht4ctfvg+/8XufwdZ11cvdmksMF9/48pex8zd+
      DzduXXe5G/NLh/cHAwwwwLuEwU7wAFc0BgwwwBWNAQMMcEVD+cIXvvAF+vHdr/5nBMPX4Ht/
      939i5PqPYfatgyiX8zh27ARc18VDDz2ExplDONbUMFwtQWU2Xn31IMrlAo4fPwFf0tFcmMH3
      dz+Cnddvxw8fehinjh/F2MQIjp+eQ0b2cOjYGRgSw2KrhVJklx5ggMuF2EbY8OYbUD/6NLT8
      OF54/FF8+KM34sfffRD6ttvBDr+EYrGIahFARcEvnnkVv3b9EBbPvYWTx45CmdgBdvgn8P0q
      hkpZSLKBbWM6loxpPPyjH0GWDXSv3YE3X/oXHDDWY8uu67B+fPwydXuAAULEGKBaHUHj3Axu
      ueN2KLlJHDlwCNuuvx5uoQpbGoZrNuHIOsbLZQxXPXTqTRiVEWSyAbIjVdjSOrRqDXhqHgAw
      MTkBTZ9EwZ6GrxZgt1sYnVgHVxnD9Tu2X5YODzCAiIEZdIArGgMleIArGjEGYG4bTz75FJ59
      aR+/dvbs2dgLJ06cWKU4H0//bDcWbWDvi8/gyWdexLnTx/DiS3tg+8CBZx/GiUX7YrZ/gAHe
      EWI6wNnDh7D91juw8Poe7Nv3EqAWceLQXty083ocOdNCpVxEc/4k3jo5A2fpJI7VgV1XTWJ4
      aju2b14PQMGWDevgBECn00HH1XD4zRqyRgbH3noTsqKj4wSXqasDDNCLGAOMbpjCE88+DSDA
      +uE8HAmYmoq7GkuSBEVRURwawx1Xb4AKD9s3r0e9XkelmMXBQ4ehB1V4rgfmAdWxasgMHQ9O
      fRmWPofr1m26hF0cYID+uChKMHPaWGhLGBvKX4w2DTDAJcPACjTAFY2BFWiAKxoDBhjgisaA
      AQa4ojFggAGuaAwYYIArGgMGGOCKxoABBriiMWCAAa5oDBhggCsaAwYY4IrGgAEGuKIR8wbt
      drtwHAcMDFKU3pYx1pO0VLzPrwnPpb1zPnieh0wmA0mS0Ol0UCqVIEkSGGPwPA+MMei6HqsP
      AIIgwOzsLCYnJ3l+y9XqZoyh1WrBMAwEQdw1W5IkSJIUy5OZRMBY2D+sJMSltlxIn9/OGCXR
      6XSQyWSwFncuSZL4OKrqqjmR+fOKosD3fXieF3tHbHeyD0EQwPd9yLIMz/N4OUD4jeUo+a84
      xr7vw/f92Pe9VIiNhOd58P140lYiQvpg4mAzxiDLcowA0u7T/4MgQBAEPR+Ays5ms2CM4dSp
      UxgeHgYQEplhGLHyiXCXlpZQq9WwceNG6LrOCbiHYSMmarfbsfqCIODtFQky7X1JksAA2K6N
      IGCABKiyAl3VAIQfXux/PyJJjg/dT45d2mRCddD9TCaDRqOBfD4PWZZT2yC+Q99RZHz6RnRN
      fNbzPHS7XUiSBFVVoapqrH7GGDRN422wbRuqqqJWq2F8fJwzD2W7ZmC8DfRNqV+dTod/w0uJ
      GCUGQRDjwoAxKMLArgbxQ1HHRS6XZblnZqVBVBQFxWKRt2H9+vU4cuQIpqamkMvl+Ps0eI7j
      4NSpU6hWq9i2bRu/nzYbmaYJx3F6ZnuxDfRswBjUaLYS++X6Hlw/kQqaAX7gA9B439MIXSSo
      5Fgl79FfcVJJuy4+X61Wsby8jGq1yhk6CIIYUROSkxHN8PQdku3xfZ+XkTZxJfsiSRIcx+Gp
      0RVFgaqqvDxFVnhZaRMOtelSItYjx3Fg23ZMDJBlGaZlQRFmYpodAEDTtNg1x3FQqVTgOOEZ
      R9QhWuZkWebXXNeF53kwDAPFYpHXm8vlsH37dszMzGBpaQnr16/nH/7s2bNwXRdbtmzhRJ9k
      LN/30Wg0UsUMURQQIcsy/ATBUJ2e76WXhXTiTiKtriQB8Gek1ctITjRBEKBUKsG2bSiKwmf0
      tJUQCL+x+A1a7TZ0XUc2Ej/DeiQ4jh2bxHTDgGlZ0HUdcjTmyXpo4svlcqjVanxlsm0bhmFA
      URQEQQDbXilbluVQ7GaMrxSXEjEGUBSFH6JgWRaCIAgJXJKgKkqMO0VmEK/RUkmdJyQ/Kq0q
      xECNRgOariGXzXECmZqagmVZsTjk8fFx5PP5vuKO7/uYn58HgFSZUpxB6bfrulE7egnP9hww
      9IpFEiQYmt6zOqYRnSg+JleJtNVDnBHTVk2xTABQVRWO43AG6NcGGh8g/NaSJKHb6WJ4aAhn
      ZmYgyzLciDB9z4MkhZNfIZ9DsVhErVZDLpdHEAQoFPLodrtgjME0TWzcsIH3J5vNQtd11Ot1
      lEolOK4LwzCQy+XQbrfheC50hDpnoVhENpvl9V5q9IhABJF4NFVFEARwXZcPMtAr24ozAq0G
      omIqEl/AAs75mUwGnufBdV1YpoVsNotsNsv1gs2bN/N6aMbvN7vNz89D07RYO8X2AehZZjVN
      i5TbtSunDAFc34OmrAxhGoGLxJ1WblKsEQk8OYGkMQkxMDFLUpxKjgGJMVRnJptBq92Gqmkw
      dB0FRQknBFWD4zrI5bJ8kioUCtB1HSxgfPXJZrOQJZn/33Ec/q0zmUwo3hYKKJfLKyu2oqBc
      KXORSJIk2M3G5WcAUTlMs3AkCY8GUbxOTMQYA1JmPfq/IimxJU98xjRNuK7L3y0Wiz3EQOKa
      pmmcCOr1eo+CJRIh/V8si+qVAUgJ0YQB/HTIXsaQoMhKquKbNquL7Un+X1RW+QQhfANxUiFr
      WVo9tm0jm80iCAIuovq+z+Vw0zShqioMw+DvlopFGIbBRSDf96FGk4fGVGSz2diEQe85joN8
      Lgdd19FoNLh4I8syLMviYlYmk+FMZ9s28vk8yoIyTSgXSz1jdSlwfntYhDQlL+0aLbGSJIVE
      tYp4EAQBJFmGhF4xwfd9TtiMMZRKJU743W4X7Uh2dV0XDKxHekkTFc6HnhkXQFYzIiZgsL0V
      ppQlCUpidetXTrIdNEkkjQTJtiTbTnpU8noQBMjn8/A8D61WeEZwPp/n34LaQAYFEaKuRt9T
      0zRu0aHrBPHbEOOKq4qqqqhWq7H+iDpXvV5HNpuNMYYoCl5qxBggNgOxALLUO+PT334ElrQk
      JOXYHvEpWilERUpU0jRNg+/7qNfrsfd1XYemaeHyGSnuTJYAf2UFEmd+sX00OybRT2mWGIMs
      K1BkH4qkcMJPQz8ZP1ZeikjUt+6o/bZtw/d9bkNPThie50FRFOTzeTQaDZimiXw+31M2mbpJ
      rKGxJBO14zicwNN0CvG3pmkwTRO5XA6KqiCn5SGh95urqgrbtuG6Lrf2ieIaKcYk9l5K9DBA
      2qxOMztp7UkzHb0LoMdUlpzZxAFMk/lIpOmnZxBoI0uJlPNsNouuYwERMdAHJiKxLAuMMeRy
      Ob5ZI5a5mqJKzJjRjNhzaf0nkEgjErvIlL7vw3EcGIbRI3aK71HbPd9DPpfvEbmSE1G73Ual
      UuGTRqVS4f1ljPGxIbFVZATTNPnqROIpiUA0DpIk8W/sOA4naBGO4/TQgaZpPXZ+6huJTJfd
      CiRCJASx0+KHpMGi5bLfDmM/8YBAxCjqHedbeZIKO2MMMiR4vgfXD4kpuTTTYIv9ELHatSQh
      i+0Sn0lrq1gWQVEUbmhIKrzJsSO5PbmSiPWrqop2u81FIT/wUS6X0Wq1IEkSCoUCOp1ObLUg
      WV7XdW71kxUFQ9VqeLxpov1JETepa9FqkBxDIP27S5LEDR6XC30ZoN/HTO5Guq4L13VjylYa
      QaSBNkREi43jOtAj82K/jTNSZMWVAgA8J9QHyAokPq8oCt+epxmQtuqTTCWKHv1WBrEPIuMm
      25dcUUVQv9PKThJ3UowTIcsyXNflzzHGoMihNYdm8Hq9Htrwo7b6vo9ms4l8Po9Op4NsNotq
      tYpMJpNKrHwl8jwUCgVeH313Imbx+csh018oeqxAaQSblOuTH0NWZOhaOJuRwpM2gycHhMQq
      8Z6makgiKR6IZfZYq7BirUr2RdO0FTMdwpVL9KVJlk3X0piZVkCaUYnJ+hGyWBb1SRQ5+00Y
      NOuKq6v4DBGm7/soFAqhfiOtECDJ3pqmcSsSydokPo6NjcX2dZIrG7kqkKWn2WxC13W+eoj9
      o2/yvmSA8zU4KXPS7J1Vsj0Eulq5NMCivJ9UDEXCpoE/n/KYy+ViTCUSD82kqqrCdV1I6N0o
      66fcJ8UN23ag61pM70kTgQDADwJoiRmc7if9qJL3gBXLj7jjLtajKAps20axWOTM7dhOrN2M
      MX6PCN2yLAwNDfE9mHa7DU3T0G63YZpmaMNXFbCAcRGq2+3CcV1kDAO6rvd1W1BVFZ7nXRbn
      tgtFjwiUNgumoZ91gAZF/IhJUSJtOU8SQnJW7Ef8SU9FsmTQLCeuBknRJmnfpi37fvIqlb+0
      vARZlqFpGjKRi4BhGLH3qa5Ot4t8LgcwoGt2YRgGLMtGxtBhGAbanQ7yuRy3zYvtIfk/zXlQ
      bBOJIuT/QyJR0hdIURXuepLNZtFut7FUWw5NyInvbds2dKbzMrvdLhRFQTWfP683aZof0nsV
      q269JWdD1udemq6Qttlk2zafyZO+JOI/AD0DSEqaiDTRRTRxiuWJsybVS3sMdF0k/rTVjq77
      fuh/02530DVD4m+2WtHM56PZbKHb7cKKfKjm5udhOzbanU4006romibanQ6azRZX4kXmJr0q
      Da7r8v/TDn3S7JjL5UIdQ3hPVcKVyPN9dDod2LYNBCxO/FETAhZw58hCoYBisYhCobAmV+r3
      E2K5QRcXF3ssMUl58HxwXRf5fJ5/JJE5aOc2TVYWIb5DYoLv+32X3LVYX+IE7MMwDO6q4TgO
      31NIlpHsM8n+wIq5T5R5yUXAtCzk83kosgzP86FqKhzbhqppPJKCbO9pogJtUImWFoK4seR5
      HorFYo+Dn23b8FmAwPO56EPmxn6zs67rKyuYLCOfy71tgrdt+7K4N18oVrUCpV0TdzHTGEKc
      gUXRR5KknuCNgAWQELeS+L4PBkAR3CtES0g/i0nS7z1pfRFXmKWlJaxbtw5q5ONEIgTpGiRC
      9RsH6rsYp0BuxdROcVbX9VB+JxcGsY2iyCj2N43waXxpJRUnE5HJyVpD5ZK4Q745AWPwPBeB
      H/CNtUwmwwmWLGbvBORq/V5fMVbdByDCEmdey7KQyWQ4wSXNlf1kevEa/V+W5NTrq1lFRCIR
      iZ7aIJoDkyDX3HK5zJVLSKHI0Gw2ufKWlMfTmEBsH/ne0Eye1FfSylptlUqD+F7IVDpnskaj
      wd0ckhMElavrOqrVKt81z2SqfEzEQJeLBZpM3utYlc3Jv1v8OGQnpmtJcSamWCL+4cSgmKQy
      LL6fFjyT9qxYb9K/Jin2UH8Mw0C32+XvmdHmGNm2SdxarV6xzCQj0rXkb7HPaaGY4ntJxhFX
      Vdr11nWd+9TT5hP1XVXVmFjV7XZRKpUgy3LojFYuwzAMGIYRE/0uJsTV7b2MVRlA9BwEencs
      k7NWUumUEJfnYzN9Sn3BGmbAvh0RXJ1XM8nS5hvNlBnd4JtCYr/71UsyvtgXVVVjLgVUvkjw
      /cykxHB0T4zComvkByS+J9YjSaG9X3xffF6WZdTrdczOzsI0zVXH8Z0iCALUGw14nt9Tl+/7
      oeIdgfQcAOimtMtxnL5+WxcLPSJQUhZNDjhdT17rJ7L0e05OMIvv+5hfWIRh6Aj8AKVyCYHv
      I2AMRorNWWxnUv5fyy6yWDeJEpDCsD0xpDPNBEli4GoBP0C6niS2mWImaLYUXSNE8QpY2bQT
      RVJyXKOosEajgaVaDdlMBpqmwXVdZDIZbrun3e93E47jYHFxEcvLNXS6HYyPjqITrUC1Wo3v
      /ayfmsLZ2VkYhoF8LodarQ5JlpDNZNFqt1AulTG/MI8N69fzIK13A6k6AH20fkt7aErzQgtG
      wm0hzXSXZl1JzqymZaFUKqLb7XJHLlmW4fs+OrKM0ZGRWPv6ybppCjJdU1UV3W435iVJym82
      m+UzcZKwRYIkhTEZfJK2Gibr5301TW6rhwQwsJjYlxSJKAKOTJ5im4igG40GMpkMCvk8Gs1m
      6DuE0NRrWRYcx0Ehn4+tVO8WWq02JicnoOsalmt15HM5zJw9i0q5jGazBUUJ+x5OfAEazSYc
      14XrOmi12hgeHsK5uTnk873u2xcbqWZQGtwkAzAmhg+C+9WIopFpmiiVSrEoJVqS0ywCIqEs
      Li1BVVQoqgIJEhRFRjdysMpFgR79/FSAXg9MsQ6ympB9PZvNcj8m6g+FFYpKdFIpp/L6iYVJ
      y1faqpkcV+oXtVNcqag8keG63W6qHpHJZNButyHLMgqFAl+pbMcBi77BxMREXwvTxQAlFwh8
      H5IsAwywbAu5XA5mt4tMJsNdtX3fh+t5UCM90rZtaLrO3c1Ny0I+l3tXI8ViDHDu3Dlomoal
      5WWUS2WoapQ1QJbDDklSzEQIxE2O1Il8Ps/lOyICkdBWm6lN0+SriKZpsY/V7XZT/eHFepIQ
      20cuBd1ulyu99N5qoh+VQ/fSZvu05/sxQPId+ksrXrfbhawoyCUi5nzf596sYuQd6WqtVotv
      VtEYkqhF7RkZGXlXGeD9htiUvLC4CMPIwDQtSFLoK16r1aHpGmRJ4n40ostrP+U0eT1pLSIX
      BpFAk/B8H5owqyd952mzBUh3zQhYuMtJ4sVaNtPS2tHvHrVFrDNttSB9Io15gJUdcnJBTgaG
      JJmFFH3Xdbn+0ul04Hoezs3NQVEUPlEpSmjizWYzCAIGVdMwPjaWOgZXImIMQKlJfD+0hTu2
      g0IhD13TIStyzN+bsZXgCmAVa0/0nBf40KKP5/s+t9cnZWVx9iISoGeIeIkg0hRjEbK04r5B
      saqUnkMsRyTYtJUgTRRMPiu2UyxLnN3F58QyKSKrXz+pDIr4ohWVvoVpmjCMDKwoqiqXzSEI
      fCiRzlMulZDJZLBcW8bw0BAGWEFMBFpYWIjJ8qK/fKFQ6FEIk7Od74emr2q1ypWzgDE4kUsu
      sBLKyABuCUqTt2mWT5P/0hJ1idaRcPYPoMgrIX0i0VFgeXLXejUFul+9qym7yXKSz5A78Vre
      pX+tVouLbrIsQ9N1qIrCRaOcIDPTuHqex7M2lMvlvnVdiehxhyb/lAAsNiOtJssSNE2DHcn+
      /HmAi070vCRJsUD4ZFmStPomSpqsnvRBt10XQEgohqbBscLwPVLO2+12zLIjbu6RNYjqEMNB
      gRUfHiJCEq+ofjHQRXwuWb74nnhN/A40/pIkodlsolQqIZvN8h1r13W5vZ1W1ORK6HketIyB
      QqEwIP4EeswyFCQhKzLMbjiwog+LSBj0gUjBZYxxjV60JIkfUknZZFrrR2EsTFPoBz4PfNFT
      AmiAcHXxWWRREYiPZsJ+8rpoSSKTqcgQyfYSA1GwCTnYkWuCZVk9rgarzfhiHUlFmnypms0m
      hoeHuR8T9UfUqWL1yBIYu/RpB98P6IkIIwJQZIVvvCRnlCTh0HY6zWD0DP2VJAm6YUBbAyGs
      plwzFqUpDH/B9wOocq9nqR/48FkU3G1kYJthSj8iZLKlr2ZeI1EpYAEXOURlfX5+HmNjY1AU
      hfvKi6Jiu93mmQ7IvJrUORzXhR6NnXid9CMgnvOUCJ5CG8XsDWnfhiaMbDaLQmnfuQsAACAA
      SURBVBRQP0AcqQExokIqyuei0kvXkoQhMgxjjDtfpcm6acS/2uwY1iODRcStK1qsvcKTkCAh
      kzFgdS2UIndhsW1pdSTFB0VRuLeqoijcctVut7Fu3TqeOZmCY2iMGAs9ReuNBrqmhU63i4mx
      MZiWCUM34Hou3/Es5AvomiZ0LczEpus6avU6JqPsyiMjI7Btm4ta5HYhtpWy6onmacdxIMlh
      uKoR6V0D9KJnChQVxqStOzmISSsFsGKfprQf5LVIz9N9L0gP9hCXbxEBCyLxJxJrIIGBwfU8
      ntSWNt20KM2f1TFRKZc5UaYxLNVFq5/YDtG/iDbzaKOPYgGIIJvNJtrtNp+5yUrj+R4yhoGu
      aaLVbqPdaaNcKmHm7Nlw9TC7aLVaMG2L2/l1TYOmaVy0oVw+pFsUCgW0ogAccqVIMq/re3Bs
      B77nvy/88i8XekQgoNc8KMrGBFE5TBIrAC4T0zOkR3CxSem/K0w++aLu4XphivKsngGLkna5
      fmheVWQZGdXguUvNbheapnFCpbLFfomBISJjisxB/ep2u1BVlYuEyYgsYpByucwVVUmSUNQ0
      uI6LQrEQeWLmoGshMVYqFVTKZbhRihI9yk8a+D4y2QzfCzBNM/ZdSKeiGGDSC5L6lMQAWVEw
      XB1KTTQwQIjUzHBJQqePLs4kogwtPp90d+azK4uUS6TL9mLdsiz3+ORrigpVUaOTWUKZV1c1
      aFChyCuBLIVCgdvHRctTcjVLtltkDj8IECCA4zoIWgHfO0hzJKPxIRGInNKKxWJkt8/B0PVQ
      oY6C9gGgWgnNkSwIoETyPI1ftVLlB0+I4iRNQpZtw/YcjA2PwrZtmKYZ+y4BC9s8PDw8UHzP
      gxgD0BJMO5IiUSbFhrRVAVhxR6a/dJ+CX/opt0kkiVZUWCltI4lCpIhSUqh+EPsi1iEyXrjS
      uIAkQdN16JoGxtBjCRJnZdFa1G63US6XwzTgjoNSqcSfUxSFJ/7VIjGHOw/KEhAw5COHNXJv
      Tn4fxhhcx4ERJbMVvVJt24ZphQlwq0PVVZX8AUL0nA8gyTIs1wnt9AhDE3VVW3EZhrBDygLI
      WCFsVVUxNzfHZW6aNZNpCun/hH6E1Q8SpJjZz7IsTkyrKdL99AtR9ApYECZJCAJABrq2FTsK
      SXyXAWAsgCcwB22w5fN5fuaZH/g8Mx2NI/m6+0H4rhRGD3EGJsVajK0mJlVVFZqQqY98e2zX
      gSTJ/IyFAc6P2ChJUngQhh/48AKfZwYAel0cLNfhiqw4oxaLRf7xKeoIWAkySZvtRSRFleTK
      Q9fJqY3ukwiSfC5pjhVn/bTnFSnu5kymRMdze96RZAmNRgOlUpGfdUD18Z3wIAALVlLI0/VS
      5J6gKiogWJJIb3I9N8bQormT+ioGlzDG4LseJMT3bQZYHTEGoIHWVY3L26KyanvhbBQEAWRJ
      AljcX0ZMQkXKGqXYJsJJbtOLddN90QqV/AeEKxWdJGmaZizEEei/eogKsKjcx19OL4OYncyR
      dhT4kS8UEAQBbM+FF/ixg+BExdrzPXStUKHVNA0nTpzg7VaklbjcfD4Pz/cBFvc5EvtGY25G
      CX/pGU3TUKlUBhafC0CMAVw/Sp2tqDBUDVk9HvVkqCuijGgmBFZkfxJ/xK1/Xddj+ebFTSGC
      SIzJ923XgenYcCIGFF0SAGB4eDg1jpchNEdagi+SiDRRiSXuAyFPGKoWBtSY3UhUcTE+NgZN
      UWE5TpThAnCF5LGxshnA/DANuGVZmJqaCscK4LG5mqaF+XxkmftMif1NThqO46DZavHxKhQK
      A3v/BSJ+RBILuJlOnC0JogydMQywgPGZx3Vd7l8jytRkLgVCtwAidDG9OWMr6deBFbt7EARw
      fI/v6nq+D0XxYTZNlMtl7g5N4ge1jf5KAGr1OrqmiWLkB0Nu1CRGDFWrnBFs1+F7CiLxh6Kh
      inanA1XTUKvVMDQ0BN/zYDp2dG4y4PgeFEkGUgwv1FbRP19RVWiaCl8IiKHJoV6vh9Fw3S6K
      UUhgcn9GkWU4jo3FRRvDw8N99aoB+iOxDxB9+FUUSCDKRuy4XPGko3fEjRvxHUr+RHsGsizz
      4A3yYtQ0jSu1FPhC3qgrjQAcz4WiKrFglpX2x82pZDIsRBYa07RQKpW4qCbLKzl1vGhPgUy1
      oYlyJU5YkmW4ngvd0FEoFXi8MmMMmqrC9Vx+cF5yvICVvKWUXdk0TQwPDfH+i8aCIAhQKBRw
      ZmYGqqJiYXGRTzQUdE5BR5lMBr7nw7QsdDpdZLOh/D+9ceOACdaAGAPIUhisDvR38yWCE2dv
      8uFPiwcWiZKUOgr+oEBvSZL4CqIoSuwoH0PTIUnhRhj9diOHs2TKljSFecPUVHxVkCQU8mHG
      MyJgADFLjqEbCHwfmqFFkXAyOt3wVHbHc0NFWZHh+i40VYUiyXCFsUuOm2jBoX5XqhXYlh2L
      sKPzjMkMKksyTMsEY2F4oKIoaLbasCybH2Ln+z4c14UiyyiVSmi12lCUgQVorejZCDOd0HfH
      ULVUUxot00TwSf+aJLP0Yx7RzEfEUYgUSlpBSHeQJQk5IwNZCpXPYqGYKvOLoluzGZ6Vlc2u
      6DFhDk0FqqbCsm0u3niRyZOXEQRwHRfMDxnVj9qk6TrgRYfIAfD9AIoa7kiDMahqb5Y3cdzI
      LbxUKvEMzmSxES07tBKWSkW4XjYMTfVWYqppvKjffjShaKqKyQmsuhcyQBzxjbAgAKSQQH2m
      AEGva4CmaTxXfNJm308k6QdxI03Mh8PbEyWyonz0YvpCejYIAh7pxTfdonBBSZbQardhmhZ0
      PXQ10DU99Bb1fOh6mFqw3emgOhxmSlPkMPJtuDoE0zTDABQ/OhTC82CokUKvaVHwduh2rSoq
      P/ZT7L/4l9pO40j6CD0jGgtMy4LlhPeUYOXMNMooQSspbTr6nodsxEzv9XSE7yWkjpQkSVBT
      PiZlVCB5Nm0nOE157nePGIZs7EZCAQdW5GFycyBRit4HotPsI8IgPcTIGKEowwLugnBubh6V
      qXLo6hD4UGQFZrTzTdA1HVbX4gH0iqoiKwG24/BsBeR/EwQBHM+BqqixjbLkhhuJeMQAnudx
      gwClY6FnSZzUVBUwMrBdp8eiBil+kAildRngwpEQgUIzoCor3FmMBp6yiw0NDXHfk7TNrbTN
      J3F3Nm031o92YMVcBclVhxK+ikoulWFEBzaIYlExYhZCEATYuHFD2C/XhhKlCs/kVs7cNaIz
      b4eHhuB74WaU44VuERIk6MpKJmjX9+AG4Yognhopjps4OVBMQKFQ4Ke5kA7kui5PckU+V+Rp
      SmlaKOpLzL9EViGpT+joAOdHz6jJshzOnEJOH1VV0el0MDExwd2ck1keaEYk//80fYD+Ju3Z
      csqMKTJRuNsa+tQkXZbFf8lzZ8VnVFXlwSciJEiQJRmqogAsOvrTtsJ9B98DaOaNMklzpTnw
      oatq+F4CYtvpL6VzoVWU/IEo0L1SqaBYLMbO3aI9E/Fsr6SISTmTBhaft4cEA0jIZbJoCb7t
      on3acRy4rhs7SCI5+5MXpygy0b3kKuB4LizH5rZ3119J6S2uGqKynNxnSLZBbIt4b6XMgJt5
      ZSn0c2JgUFUtyq5gwI0iwaIXocgKl+8ZCw+YCHfJo1Pqvd5NtmQ/0vZTgiBAo9FArVZDs9mE
      LMsol8v8Hdoco9iC5MQgMskAbw8xBtA0FXZ0sEM+n4dpmvwMqkyUbzKbzaYe2JYUbxgLndSS
      K4JIrK7vIQDj7gdJpqIlPpfLxYJNaCZOumMnV5e0OmVJRlbPQIvkdjfwwuwUUf3EhFSepmrI
      aDpvox8EYdoYbSVHEW0IiuLeaiueaBYGVs4Ba7fbAMBTN9KYkLIsSRLPCk0ik2mZA/HnHSDu
      DMcA1/X4zG8YBlcuye4uujgDK747af/ocGRC0iqkCKY8Q9W54p0kaPKuJN0jTfFOKx/ok98U
      oY8T+fcYuoF2KzxAQnRA0xSV+0J5vg/Lc2B7DvzI7YGYkFbEtJVIzDiRhCRJ4WokrfhTUdoT
      sf0kbiqKgmazCU3TQrdpXUOx0HtQ9QBrR4wBLNNCuVSKEZ5hGDytNc00FINKEC024jVydyCI
      REDhjZIkIaPFA+aTSjNjjItg/VJ/EDEm9Q4xv6ZYNgBoioKMHqUULBVhu06sTDUi/oAFcLwV
      EUxVetsqimP0XHI8Uo0FLJ792vd9tFottNttLgapqopischPcaHwUGKKAd4+ejLDJZ3GRMKi
      j764tAzGGPK5XLhnEASQZQn1yIJCRKcqCpZrdeRyWehRnk9ZluF4bjiLRgQA9IoIVDfB930e
      bVUul2N+8smZX5IkrmjS/kByzwIITYmtdjtyyTD5gR6MMVDsGgOLcgyFMFQNvh/O1I7rIZMx
      eBYHMhh4XihWydGGoa5pPS7KIkNSO8UDSZInw9MmGWMMvudjrDo0EH0uAmIjmPThEf+KEUqh
      56eEVrsFJ5o1/SBANpOBaVmo1WpRVgIZ3W4Xhq7j7LlzoYUjCLhzG2MMGd3g0WJJJHUHYkYv
      iqNNPkNlUhvFw5+TTCBJUmTl8uEHfs+BHcT0pBCTSKTIYfxuvdFEJmOg2zUR+AE6nS5M04Rt
      hZ6nTpSwyrJtLNdqsG0bdrTLThAZ3LbtmGUtSdyUyZrcKdK8Wwe4cPSkRhSzmgHpkVtx+zqL
      xFgpZjoVmScIAnS6XRTyedieu2JhAZDTM31l+uQ10ivIj542kcT9imR7+4lKQMgk8wsLKFfL
      sKIdWVmSwz0JNS5qGKoW2+m1bBvZKPpLkiR0uyY63S5GRobDVS1a3Sg1ObWDTmJME/PkyA2a
      zJui23ej0eBOhblo5eUbYwO8baTmBk1TJoG4KTPJIOLvpFhC10zH5sHxQORjr6RblIDek1+I
      WMgy1Wq1uO08SVBieVQWzer0fKPVRDabhe2G7tQyJBi6AdsNszVDkiIHQRmaIPcnmS1pm6dn
      iPm73S6/bvoKKnkDmir3MICo7+SFwyxs2+YnudOmnyStJPgaMMHbR09IpIi02bMfkjZqUW/w
      g4D7zVM5mhyKQ5Zr9xDQaqsPIQgCbppNElDSFClJEnc39jwPtXoNcwvzXIwKgtCqY2jhbnIQ
      laXKCgxVD82lKSevJ9sjjoM4FqT7qJqGB39xBKazEl1G7RZFOvJvItAqk8/nY4o+9V08a2uA
      C0NPXqDkxxOv91sZzocw0HyFyHVV4+4PIZG60BS1x52Y2iDK/xQOSfsRtEtMzxAhUepAMkPW
      6/VQSdU15Ap5FKQiXM+FaVuhv3+kjDIZPeIO2exFB0CxjaJYJbaZ/k87vqcX2sjqKorZeH5U
      MRM25S4VlXzKZg30OrrRRhklIRvgwpC6AtBfIlL+sBw/XG6tzMAV02gTKix7ZYfYD3xughTr
      iJksNQ2e76NWr8OInNFoh7TRaITlR8TfarXQarXgRRFVjWYTRjaDXD4PVVaiABITvh8gqxvQ
      FRWuExKRJoeKbnL1IYbra89P+T8QP771mddn8eEbp0JGwsoRs57nodPpxFZNOhiOTKy065tW
      /2AlePvoCYqnvwFjsD0nktvTldLVRCLxOY+8HVno95PmRRqwALbr8CCVmKWGMdQjIi+Xy3wT
      ip6j8EjTNMMjmgoF6BkDDAyaoUMzdDAAHbMD0wkDyVVZCRPrYiURV1pu/bR+Jm3/q00EdK9r
      ezi73Mb2dZVI5Fo5simXy6FSqaDT6cC27VgkHP0leb8fBkzw9tDXcVwCYCga3MCHLPd+4NXE
      oZj9PvDBsJIvFEg/D1iSQr96z/e4a7EkSWh3OlBUBeVyGYHvh/l6EBfPPM/jLs2O68CyrTCu
      QdAFZEmCLCvQVZWHPIp1p6VVISRNkv0sTslnRMzVu7jj+ik+ltQuEnVIH3AcJzSXyhLyUUZn
      SZHXlN9zIA5dOHqsQLSJJBIEzXZpu46rKc6MsVDJjf6fUcMdTz8IeAxAMlOiLIU7w5IkQZJl
      1Go1VCoVfkifWB/JzowxMIRyuuv7MbGN2sgYQ1Y3eGrGNIIV+ysSeT/bfeqAJkyvcUtRuLWW
      Nn6SFGZ5azabsCwL5XIZlUol1p61YmAdWjt6GIBSdWSEkwSJAdI8GpMQiYiIP7oABAy5bI4T
      ief7cH0vZh1SZAVZ3YCqqliu1ZAv5uF7Ps8JqiRmYz8g0YnSJYaZ3SRIUFUFiiTzFYf8evoR
      dJIJVjMJJxk9zTTazyQrIqnv5HkAv8nPB9ZTDgo/HwZMsDasaR8gbUNJvCeCnvN8H46/slsp
      S1LoQZkokzEWZmOABFmWoGt6eFRqEJ0zK4UZG4CQqHNGqEQHLIh2aSN5XlUASLDd0L1aVzRo
      5MMPBlmSexzWVusX9SVN2Rf1j377AckVRLQK9fOPAkKTZzIvaLVa5fEQF4IBE5wfPUHx4t8k
      xA+apsjSu4wx+CyeISItLzS9r0cB+HLkOqGqKnRFj2IF/JDAIzPpitgT7tpqqsxdKcgvCQCP
      2GIs9OvJRkE+55uRz4c08UYcGxFJ3UE0d4rXYoouepXut+v2QDpBcvUeYAUxBiBTG0H8ELT1
      Th8rGdcrvuP6HidQRAJOAMbFFLEMWZbhOA63XlDSLMdxwmAVxqAqvSe3i8lhQ3EqJHggdLNW
      ZAUy4u7ZIpIES+nVRXNj0q1DRD9ZP1m++EzSwiSmj+Rjx3yougYEbMWRT8LbJuJBprjVEWMA
      WnrJskKZiIGVE8f7XSPG8Xwfvu+F6UdUBYyFB7T5vg8nCLMyAOHHbjQasZA/Mf6VfHwURUHg
      r+QJJYJUFAWQAMdxEQQ+HCdMNyLJocysCjbzNCYVQRtoWiJkkjbA0vz5RZGGfp9v5ex3j08m
      sgw18KOVTfg0EkLrmPzuizIXqnC/3xHTAZaWlnqCukWxZzVryGri01rFhn6/idHE2YzvJCOc
      8S0zPAuM0o7z54SEXeKZZ+KxpNRnMXyTdn3JJk+5T4kpiGnEa8DKqrbatbR3GQtPs+TKd7Ti
      KlEOolw2y61C58NyrYal5WWUSyXupk1Z5FRFhe3YyOdy6Jom2u0OpjduwHKthoxh4MjRo9h5
      ww1XjMiUekqkmPUtbSNoNaWv3wxyPlNiPyYRmZAI2/ZWcngCQMbI8LTiRDRUhug6QMyUJr6l
      2fbTcKEzZNrpOv3KZQjFR11ZYXRJCg/qsG2r77tJ+L6PyYkJnJubgyIrcF0HhpFBoaBi9tw5
      ZAwD7U4HE+PjME0LtuPAMi00Gk0MDw1dUStAjAHEzM7ns/n3EynSxI5+dvE0SwndF238BEod
      qGoafETRZEYGrWaTH5MktilN9CEmXw1JZk6z5oigmZ4mjWQfyS9pNZGMM6yk9OhbiGbvteoB
      +VwOC4uLmJqchGXbaLc7KJWKsG0bU5OTYaY7NzxET1Hk6HyyIHTlRvoq/suKmAh0+vRpfjib
      KJv2Q5os3e8j8wr7iEhElMR4aQToel6YhFYOffYzRgbtVgvVShVKlHJEnNHTmDBNeaW6kiuD
      6ELdr/+0Mq3lubQ6k23lfY1WDWoXuUGvNeubaZpotloYHxsDADRbLZSK8fhhx3FDK5uiIGBh
      aOaVhtRTIim/j5htTJyZGVsJ4xORJIAkAfZTJJOERKDIL1mWo0gyH7qhh1YhMFhmmMGiY3XD
      XKaSHCMkOtc32T4iKhKbxLw74jtiQEo/ZZdErn5IMrHYb3GySK40ZLsXo9ooX9BacG5uDhs3
      bMCp06e5jmOZFoLAR6vdBmOAroepYMrlMgzDwInFJWzevAn6FWQ56jGD0pJNxJ+cLelDiRYT
      ceZazRxIiqyoY1B9wIrJjsqj9kiKDMbCVIaWGaYUdB0Xmr7yvOnYyOpGzI05TTEXZ3rXdWPn
      AZCOQYEndEQpZbAmiKJIchZP9j2t/mS7aAyo35Trh06FlyQpZhlbixgkywoWFhbhRJm0NU3D
      4tISdF1HNpcDWLhKSLIMy7LR7Zpot9vwotPrrxTERKBTp07x5Tbp+w6sKJH9CKun8Ijw6QAL
      PToulDGGbDbbd+YMFcJQHLIdG512B/lCHpYV5vf3PA+SLAEsOo9YyOuf1Y3UMsU2UR20SURJ
      acnik8lkYnk8xVPuTdPkPvtp4yCWTzEE9JuvosJ+CI2buJpSXiAaa56O0XX5GJwPITMBIk8m
      fyfb1W8S+2VGbAUwDKPnVPUkzjebifG5dJ3ydnY6HQCIzXZJ8cAPAtieg3w2h3qtBlXTMDQ8
      hGajgUq5As9zIUNC4Ie7vkT8q+ksaYq2JEmxFYdSwNDsm7QmSVKYGIAUXtGLUzTPin0ir0wq
      h/fRD+AyH7qiAlLELIEf5vx3HLRarZg1TlJkNNstDJUrnDHPtwqE9SWvpT+X9v8rBaneoJ1O
      h59bFXv4PDJ92nMEmhFpRqUPaJomj3ZiCA+ppqivYrEYEkE0WzqeGx0FKoWJrSLPTwkSdE3r
      yWgt1i22S9QTiJjEA/76vUPMbdt2mFQrCK/n8/lYf9OSZCXLBcBjkRVF4QmJKVDI9TxkIqfA
      ltkJQ0CNDLK6wUW0Ad45YgwgnrbYT3lLI6Lkc2kQFWzRYiKeDSZJUuQeLQEstIvTSZRURtLV
      md7rl1qFvyfoHeJ7yVDH1ZRdui+eTyBJ8eRU5xuHZFksvLDym8aJJw8Id9Lpvq6tWIYGeOeI
      McAAA1xpGEwjA1zRGDDAAFc0BgwwwBUN5Qtf+MIXLncjBnh/4+nd/4wjy8s4M7MIPTDR9WTU
      506jbgX4xSO7kato2P39JzE0MYbW4ll0PRmFrIbXD7wKo1DG3KnjaFo+AquJ+7/zfXzg5pvw
      1M9/htn5BvIFHW8eO4OhgoHXjxxHtZjBobdOoZxV8MZbpzE2OtwTaHUhiO0DnD32Oo7NW5AD
      Bzfdchtymo09e45h167r3uEQpePZZ5/FBz/4wVWfOfTaPrRMD+umt+Hk0TfO+/wAlwMqdv3q
      h/D07u9i994mJjdvwlhJw2tHX8LYUBEb143ByJex76XnILldTF93C8YKwNn5Rbxx4iSYrSCT
      Cc3k68aGAAD1rot/9d/swtGDr+KN5/8Fs3O74Lk2jryxF1lZxukzE4Ak45prtvdPbbIGxESg
      2WMHse7qXbjtAzfiRw/9CEAW09PjAAvwxoH9OH1uEQCwOHsah986CQCwOg3s27sXy83QhHry
      rcM4/NZJMADd5jJeOfAGAgYEroX9+/Zisd7i9S2cm8Er+1+B6fhYmJsLk6cwFwsLNQDAW/uf
      gZmZwC233ILJkTKWlpbC+s+dxt79B+AGDCxwcWD/PpxbrANgePONAzh++tw7GJIBLhTl4TJe
      ff5ZbNlxK6anx7Ft2za0Wm1MTk5g/fgQTp6tYWpqHMPDw9i0ZQuWFxfgmh24MDA+OoypqUkM
      Dw9jqJSFE4Qm5S3rx/Dc83uw2GphdGIdJtevh+Y2MTG5CdX1W3DVlo1g3Qasd3gkcirzKHoe
      qhSW/Nxzz2FdVkJ1150w3Daas0ew75iFGyYDPLXXwTXry7hh50788Ac/xMdvvxpvnANu256F
      65v42ePP4xN33oqfPPwEYNVw56d+G+1GDUDolVirN/HJa7bjB7t/hNu2D+HNRRfrveOYL+zA
      6CjwyrE5/O5/+yEA8fhaHxpuuHoaP/npo8izLnbd+Sm47QaO7fk5mtVd2GAMUodfStzwwQ/z
      /1+3fTMA4JroL2F6Xe97n/rYVN8yr/uV23qu3bh9Q+z3li2be565UPRdPUSCu/bWX8Xze18E
      lAzG5UV07THM1CSUMsBr+19CtjqG+VoThYltyB99DvsOzOHWG6ZxZrmDN948iaGhCq5evwkv
      Pv88MvkyxkZHAQDDo2PQjRwymoTpGz+EF7/3T1jK6Pit3w7vFzUZHY+hoApSnt/B008/h+lN
      G9HpdvDRO2/D3hefh5LJ4/adt+LU83txAAp+fXQM6pW3s39ZMFfr4PG9x/nvO2/ejPFqfpU3
      3jvoYYDXX9mDObWN9Vuv5dcajQZyuRxOnZ7Fbb9xO1579HkExUlUhyo482YXhaHoDIBmA5qR
      hdk8g5p2GzYUwh3TSnUIjVYHuWwGs3OzAG4AADSX5vDC88+iODwBQMb0SBannAJXaj78kQ/h
      pz/5KdZPjmJi49bwYuDDsl0AARgDGo0WcrksTs/OodkYQzaXw+yp07ACoDA4PeiSYL7WwYM/
      f43/vn7zGCpGgP/y93fj//jf/mfc/40HkS8YKOfzyJVH8cFbfgV/+f/8Of6X//RXOH7gZcwu
      t9DtmvjQbbdgYbGGVw+9go/d+QmcPnYMV1+7Hj/44VP4zY9/DJ3GErRsCarswXEBqzmHw6fm
      seOqq1BfWsJV11yLE0cPYf2m7Zg5+Ramt16FfDazSsvfYzvBLz/5M6y76U6sK195gRnvZxw4
      No8/v+dx/vsv/v2duGHLGH68+4f45Kc+ge88+CCUTAGtzgIqRgldz0W3vozf/J1/gwP79+Nf
      f/pTePiJ3fBsHx/5tY/hqX1PoRrImL7mJryy51Go+W1o1c5i7twixifH0TYb+IPf/UP8/OGf
      4JOf/lfo1BfwxHMvw3E66LQtrJ8YxkLbx9hQGR/98IdXafkqItClht1pYGTrTQPi/yVBu1VH
      s9XG0WPHUSoPQctksHF8CPVmF7/18U/g2IEXMTkxjuyNV+PRxx9DLjMKSevi+KkzUGygODmO
      /fv2Yd30NXjryAzGJzdCl2VMTW9FoAQwNBW333ozHn7sMVQLGai6gUJGw+iQDol5yOsOpjdO
      n7ed76kVYIABLjXeMyvAAO9fMKsJf+Ew/62MXg0pc+GpHC8HBq4QA7xj+AuHYf7jH/N//sJh
      2N0Wvvq1r4ExDw/tfgiPPfFz7H3pWTz9/AsAgG/c+yWYvo/Z02/h0ccfw1PPPs/LO3rqTf7/
      IGjg9cNv9a273/1jxw7j2JGDqJ8nreRgBRjgXYGRK2Ld2AgACfXaIizHwRV5GwAAEiZJREFU
      wYnTb2JiaB1eeOkpGLk8AgAvvnqYK8EPPfQPmJrajBcPvIj57afQ6rjI5n28+eYyjh59A8cO
      vYZsZRQZw8dHfv3TWJ47hXprGUvLHfx49z9i56/swolDB1EeHUOzPo9rrt6Bg2fOIJ+p4qMf
      vCW1nYMVYIB3Be1WHSdOnMThw69D0rJwAh9jlVHYZhd6pgqr1cLcuTlsnRrGo48/BqsDSLIE
      I1fAULkUBUSFUFUFiqJiZGwCv3rrbdi4bQc2bZgKY80lIAh8XH3dTowVdRjlMWiGgnK5CDAJ
      t93xEXhO/6RiAyV4gHeM97MOMGCAAa5oxHSAVqvV77kB3sOwbfuiBMlfzHMELlZZYqLmd6NN
      PSuAa7Vx7OQM9GwRmzemeDBF6HY7yGZz6HQ6/EjPdwS7hTfnOti2roTDxxewfnJ4beUGLjo2
      A/Md5POF1NQfFwV2C/sOn8L4+ARKeSO9LruFmp9FNXfhtgXX7IIZWegpBxKeD//xb3+Ik4vm
      Bb93peEPPnItPvPxG/nvVqvVawXSMgUUMyr0jITZpQ68bg1LczNwmYx8sYKM7KFlM5itRazf
      vAOBa2H2zEnkqxNYNz789lvntHBytoac34HlulheXkansYy5ehdFHUCmBL9bx3KzA11Ssenq
      TThz7DhKlSKOnGxj26ZhtGqLaLkStm+evviM4LSQG9mAVn0Wnp2F75g4dnwGQ+NV2DZDYDVQ
      yWk4shhg40QFZqMGLV+BDgtdX8WObaHnYmN5AceOz2By/SiWayZyOR0FAOdqs3DzUxiSTTTM
      ADdce9UVmafnUqNnjXI6NXQCA0Mj45h/aw/04gjKw2MolUrIGipMN0BGAYrVEYyNDsM0TbgB
      MFwtppV/QRgpaJhp+8gqYQa2ufl5zMzMIJvLoba8DEXPolwqYf1wFafn5+F0ajCZjsmJcVim
      iUbbxIZ1E++4Hf0Q+B4c1wvbNjeH5sIMFto+tm2ZhpEtYmKkgg2bt4M5dZw6swBJAubn5jAz
      M8PLmI/eOznfwsaNU+h2OqgtLaFYqWB8bAynTp1691axAXrQswL4TIbkW1haXoavVTFWNmBn
      JleSQ7kW2g7DUDGDxeU6Nm7cCN8x0e7a7yy7cG4EO64ag2vZUNWQL61OC+MbVORUhvWZEkr5
      8IR4VZJQgI/lbBHVkTHU5udQHt6IjCphdqGGqcl3gQlyI9DmT2PTVVcDvgv4DgrlYZSqVUgA
      JtetAzQZkxkVKGxDqTgMySiiaMhQc3kcPXwYPoDRiSnky8MYHRvF7Ow5TK+fRK1hYmLdKObO
      LeLmm3ehYXrABQT6bZ2qolJ+51aXteQ0utRlMRYepdt7wtyFY3yo10V7YAX6JUC90UCx8M5X
      YM/3oWvqRSHcZGbutwvxJJ+L3aZUHWCAPrCb2Hv4NDZNT2Oo/M6U/k6ng1xuxYCwvLwMXdf5
      ucBpaLfb3CjQ6bSRy608+3997RcXTQn+4p99HNvWD12Ust4PGDDAWuG0sdx2sL7bxL4TR1HK
      GsiNbITTOItavYPi0Cgac6ew7bqbUcob8O0WXjt8CkYui6wWHSBod9CyGJxODRPT28FcC+dm
      TmK+bmJqYhSBa+LNN49jZHwcHbOF8tAGTI2VAYTnt505eQymr8BpL2Fq8w6snxy7nCPyS4GB
      K8QFYMOmrdD8DtoukC2P4szrzyGTzWK+YUJVFFRHQhMpADitOgqj6+BaJtqtJpaWa7DcAIYM
      lIaGMTJchWVZcAMJ5WKY+n1+bh5OewELjQBbr94OJ8qmDQCWZcHIFVEt5lAdGsXIcDV2AOAA
      bw+DFWCtyI1g2lCQ0bdhuzyDcqWC4k23oVAo4GZZgVGoQFeqWDh3BsuNDirDYyjAhK1pGK+W
      IGcKyMgBOm5oQFiotTE9PQ3X7sLyZBTzGUiBh2J1BIViBRo0VIoqDh8+DC2Tx8bpacgSnSPG
      sNRqI58JjQ5XbxzG6PDq556tBYwx5DJXzuEYwEAJ/qXA4nIN+fw734xUZFy002EGSvAvG6wG
      9h4+g02b3rkSDHhot10w5kGTJCj5PLSE8tttt2Hk81DWYJH5v+/7l4uiBP/1n9yJHdNXll4x
      YIC1wu1gueNgqtPAS0cPoZLPIj+yEU5jFovLTZSGx9FaPI3t1+0K9QCnjmf3HsfkWBnzc/Oo
      jI6gs7wIrZDD0Mg4OksdnJo5huFcDvr6TdDai2g6Mop6gLYjQbVbyE9txtb1kxfBAj5APwyU
      4AvAhk1bYQQmbKahMDSBMwdfQK6QR63rIWNoGBqZ5EowmIfJDVvRXF5AvpCHzxRsHK1icutm
      OJ0umJzB+NgoxkeGMFStYGFxCblsFnq2iOFKAdXqEKrVtZ0MP8Dbx2AFWCtyo9iUkWFoW3G1
      dg7FShmlm38VuXwOH1A06PkyNGUIC7NnsNzsoDI0jKmxPDaO3YT55SaGKmUoEgNUFaWpKTAm
      wezoyBXLaDRauPnmXei6DMV8eDqnpkhYrLeBfPY8DQOumR7BxOg7V4JJqb6SMFCCfwlwbmEJ
      udyF6yWGrsDQVubAi6W4XsyyBkrwewVWAy8fPoMta1aCfTSbFkqluP9Js9lEqZBF2wpQyKX7
      8HfbbWTy+cjs6aLZ9FAq9V8J/vIbT78tJfizv3kjfu/Xrz3/g7/EGDDAWuF2UO84cNt1PHfo
      NQyVCihEO8FzC3WURyfRWTqDq274AEo5A93WMl588Q1s3TKJszNzGF03AUmScebYMezcuQMN
      O4vjh16FVh6DuTwLvTiM63ZsBwDMLSxAW5pHp9uErGdx8ngdWzZXcPbsEsbXjUJSMti6acNA
      Ob4IGCjBF4ANm7YiAxuBmkV5ZB1m3ngRhXIJHVdCIZfB8Ng6lKJZPVesYGS4ikathnK1Ai9Q
      sG3zZoxNjCOXUeC0l1G3JNSWa6iMjCNnrMxFjuPADSRctWMrVDmL4aEy6rUaKpUKfKjYOr0e
      ruOEQeGXazB+STDQAdaKwIMTSNBVGctLi8iXhuC7NrLZLJr1GrRsAZoiob40x3eCMwpDrlBA
      vdFGuVSEpqmwzQ58yNA0He1mHdlCEaosAwhw+sQJuAEwvm4D8hkNqqrA8xj+//bO5LeN84zD
      zywc7stwp0RRtNZETuzYqeH20AIFWvTUay89F+i9/0UuzaHoqb2mQAu0SFugRQMEKFDU2Ro7
      iZ3Iki2LlkRKFFdpuM/SA+Utli1SlhNA+p4bMQu/wcw73/ub711a+038QT+NvTbhUACX6qLX
      G1Y6cHs8/O7dazQ649/GH1zIcXUp+/D3WdQAwgBOAZulXTy+0cuRh/1uXOrTpbPPogEIDTAq
      3QYfL2+QjCfIZdPP9b+7RhO8ITzK8bz0ZrNJKBQeOTPsrT/8dywR/NYvf8RiLn6ssZ02hAGM
      yqBNKDlNz9jm3lobRZbptvfAHYFOlVKzTzYeZK/RweMx6fkncbd2qLQdkiEXPn8AR4vg9PbJ
      n8sDULjzFZu1Lhndg+QJYw+6SMD2ZoFzryxRWFnBo6d44/zCt3nlpxohgsegWa/RH1iE3DL1
      jomu61Qru+wbbRKxKIrmJZeKEYjFCPr9GO0OiZiO2xdiKj/LXnEZr/4oXbNWb9JpG/QHNqGA
      n9Z+k91qnVgiid+j0B1AJPzimV6CZyNmgFHxJ5lNNwmFczTK66STacJ+mddDMTyqTLtn4vO6
      kSWJqCKzv9cid+lNugMbr0dDwgS3TkQbcPt2AdnlYfHV89iyisc1PH5udu7h727f5sqVi0jq
      0fV+Li2kmc2NfikPwzUEQgSfBiqlDSzP6GmM0aBHiGCECB6PTp2PljdJxuPE9eDhhbE6dXbN
      AIng8WPqDcPAHwiMtch1869v8+vC4dWPD0OI4EcIAxgVs0M4NU3f2Gan30YPNPjk+jL5hTyO
      rTIwKsTDPm5XbCZjXrYLBbyxCXy02DM1rl4eNga8v7ZKFw3TqBKKRNiptgiGQhi1Eqovgt/j
      guJ9ZG+E/NSEWO19yQgDGINapUxAsdEch3KlRcBls9dXeHNxmvV1h3TcTScYg+ZdbMlNPBph
      +/4uPR51c+6bJsFwhK5kk4x4qbYkzEEfPZ4abu/3wbLRfc/vbig4GYQBjIo/xdK0gT8QBMcG
      x6KXn8V1UJR2amoKZIkpvwyRBTKZHigaCT2ArCoPC2NNTc9hWwMSMR1VVZlXDDSPb3jOAyQc
      uv3Rk93jc2/yk9TsyPuHA8K4HiBE8ClgbWN7aETPIORzj/TlR4hgwbPp1PlweYv5mfyI4dAd
      bty4z8XX8/zvsxW+c6ABisUimczEEwL68aJXw+2Zsaqzvf2nD5+7EvzzH7/Oz354fuTznSWE
      AYyK2WG/M6DXrPDeJx+QTsQIJ3P0G9vcu18kMXmOXrPIqxevHrxtTerVBsXNLSRNZX31FqvF
      Jrl0DJ+ryAcf3WB2cZGuI+GVLHwq3FgtMptLk8lkvu2rPTOIleAxmMrPEtAkgrEU6ewMxeVP
      iaYSuAM6iXiEZGbqCVcjm9G5W9oj4JKpNw3kAz+/vFslHlJptmXm585hWTbVehNVFt7oN43Q
      AKPi2FgOKLJEt9NB1Tw4toWqqvR7XWRVQ5agtls6CIdOENcjOM6ww4ltmViONFyAcmwGpoWq
      ulAUGdu2sW0Ly3JwuVRkWR7LBXrnn5+w33/2/ldemeDywtGzylnUAMIATgEr60VU7cmUST3o
      RQ+O97XnLBqA0AAj4lg9bt5aQfX4SMV1dF2nXC6TSqWeecxXn18nv/QGhS8+JjG3RMDrx60e
      /Wav1WpEoyEMY0AgcHRViN/8+eOnRLAQvqMhDGBEqhvrpOfP0yyscPv2l0zm5tnduktxp4LU
      a7BZ6zOfjeGNJMlNDiM+PT43xc0t9mp15FIJOzPB5x/8h2xumsJGme9dzHOj0ETq7qEnUthG
      hYbpwm7VOX9pifpOl6bRZGZ+gWh49IQXwegIAxiRUCzKFyvL2FafTCKBoipEE0O/es9sMTeT
      QVOlJ1s0KV72t9fQM1lsx6axu0M4laXT6ZLU3exWGmTzi/Sr62iaQrnbR1YUYon4UBtYFpKs
      ohwzsUZwNEIDjIE5GIAso8gSpmmjKAd+qeNg2jaqomD126wVtkDRmJ+ZxnEcZEkaJq9LEubA
      RFVkTMvCpao4kgQHt8CyTCRZQcbBRkKWpKERKArKc3zgP773Ka3Bk0ZyeSHDxbnxWkWdRQ0g
      DOAUsH7vHqYrzGQiiNd9/EjUs2gAYh1gRPYbFa5du0apXHtq2/b29hO/u4aBefBe+fq2l8E/
      /v43fvXbf3Fnq/7S/+u0ITTAiAQjcaLRKjGfzb2tMlanRbW8iSeUwOk22SjuEPEqGEYbzRch
      GvNRre3j0jy8vMatghdFzABj4grEqd9fJp4d5iAqikw4liShh7AdB1kC23EYnKA7IXh5iDs0
      BgsLC2AP8McmCbtlstMzTExMPLHP4/1xbds+Ed/1KF67cIHgYpRk5NkRoYLDESL4FPDF6gbB
      YJB8+sX6CZxFESxmgFFpV/hwpUw+myEV14FH+bvV7W1CqRTaIfE7j4c6P4tKpUI8fniObqlU
      OjI69N1/38Tn8/GLn14e8WIO5yRnrJM614P380k07/76mCzLEjPAacCyLBTl6SoP39Z5TvJc
      tj0MJjwJAzhsTEIEnwJO6q19knrlpM51Eg/+Aw4bk5gBBGcaoQFOAd3GDrfWdwhHYqj0MIwu
      r702eueXXnuftcJ9JMWNW1Npt3ucX1o81lj2KiWur2wyPZFAdQb4E1Pox0jCt3oGN5fXyGRz
      tPdqtNsdFpeWRmob+3VufX4do20SS8cJazKmppOJhwDhAp0K6tV9Xrl4AcwOW3e+JJDIHn3Q
      Y2geHyqQSiYorH6Fnh7v+Ac41oDPbq1g9Vq09puUGp1jPfwARqNGz4KdnTLljbu4QoljPfzA
      MP9aArvfZXWjQjr2qN6qcIFOAWanyc2VAvHUJIrTp91qMTM3N3JRrUZpnbu7bXITKUzTpG0Y
      zMzNjl2Uy3EcbNtmY2MDt+bG63IwtTDxY4Ry24MuN79awR+K4tNket0Ok9MzuI4RGXvn9i1a
      HZNIIkEioFHryWSTw1KSwgAEZxrhAgnONMIABGcaYQCCM434DCp4Yf7yzu+ZvfR9NtcLfPfq
      FcBm0Gux3zaRcCiu3cSbfpWLSzOs31klk82y12gSiiWRrD7vv/8+AJcvX2ZycvIbHfv/ARIB
      C3lEafsQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Class Hierarchy' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Deaths Class Pie Chart' width='164'>
      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
    </thumbnail>
    <thumbnail height='164' name='Deaths Pie Chart' width='164'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Disease Dashboard' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Diseases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Afflictions' width='192'>
      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
      MQVgsqv5/wFv4LGjx06R4AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Afflictions Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eZAc133n+cmz7qq+G924CYIEL5EUTeuwxiN5rJHHMzuXHZ6dmPHGbsyG
      w7ExsRv+a4/wbmh3ZnbWG56dWXstWbRGIiVbB2VLMiVRJnVRJCVeAEGQAEiCuIFGA31V1115
      vv0j62W/ys5qgGQDJID6RnR0VWXmy5cvf7/3fvfThBCCIYa4SaG/1x0YYoj3EkMGGOKmxpAB
      hripMWSAIW5qXHUGWLp4npYTXO3bbIjq4jyHjh5LPbZ08SLeNe7PRlicP8vRYydTj128ePEa
      9+bGR4IBPL7yhYf4g0//T/z+v/0PPPSFr7wt4vh//+DTPPTQQ/zxH/1HHvvhc5va0XeMoMFD
      n/8KIlwzdn3pS1+KPz/35JM0r7Apt3aO/+53/zUXGleHZYLGBT7/le8SivS+Pvnkk1fUzpFn
      v8Pv/9v/wOf+9E/5w//0Gbop80/15AG+8+yRd93n6x3Gpz/96U8rX7nn/geYLcH0Pb/CP/nU
      R9EDh6996WGe/flzNEWO3Vun+coXPsOLL7/Ks8+/xJ333E/GjPjo1aPH+J3f+R0+9KGP8MpP
      HmN87wdZePMF9Im9tOdf55G/+AYHDuxn661341XP8vCXv8b+l1/ltrs+QGP+LR75yjd46cUX
      KU7tpGI5fP7zX2T/gQOYxWkmSwZffviL/Pz5FylN7aCcOL5logLAySMv8ZVvPMb+g69xxz0f
      4Eff/hIvHZ3Dyhe4967bWTj7Jn/x9W8yNzeHZxZpXzrDgaOHef7pn9I1R9g5M853v/Hn/OSZ
      n9MMs+zaOh2PzjM//AF//zf/Mc+9+Dp33baT06/9nLfma/z1X32LfXtn+ePPfYkjr77Mq0fe
      4NCBl/jJ089zzwd/ge98+5vceeedEHb57uM/4bbb9gBw5KWn+cZjj3PwtWPc84F7+PaXPsvR
      uRr5Qpm7br+Fs28e4uvffIy5uTnM4iSXzrzO0cOv8fRPf4o5spWZ8Tzf+PNHeObnzxFmR9k6
      PQbA4tljbLv/7/JPf/0TFLrnuRBMsnpyf9+9vvnnD/HCq8e4tFzj3jtv6bXzc6qOyZ4dM3zt
      4T/lhf2v8Mzz+5k7+QY/+tGPyE/tYtzs8rn//AgH9r9ERy+yc3aSn/3wO3zvyZ9wqeZw2y07
      rg3lbhZECk7s/4F45vCcEEKIAz/8K/HCsYtCCCEe+dPPiKYvxOc//3khhBDVucPiL771VHzd
      5z73ufjzWy8+IZ45PCeeeewRcWJFiCcf/ZL4m5+9JJodRwRBIP78kYeFGwrRXT0nvvLNH4gg
      CMS5U2+J/S89Lz7zZ18S5w8/Iz775b8WS6sNEQSB+OG3vy7OrrSFCH3xxS+uPx4hFH/62c+K
      UAjRWDwlHnn0cSHac+KRR3/Q93yPPPJI/PmxR/6zONvoCCFC8fDDD4sLR54VT7xwLDrvi18U
      vnLdV7/6VSGEEA8//LAQQojDzzwm/v2f/IXwglCIlRPioW/8MBqHz35WBKEQh576lnj51Kr4
      ybe+LI7MrYrjLz0pfvLKmV5XO+Kzn/2CEEKIxVMvi0cff0605w6LR3+wf2BfH/nPD4lGxxUi
      bIqHH35UHHn2e+KFY5eEEEJ88YtfjM87/Mxj4ot/+TfixReeE3/4B38gltutdfdaObFfPPbM
      YSGEEEee/a546tDZ6Bk//xmx0hXioYceEqEQ4omvfUGcWOkK4S+Kh7/8XREGgVicPyf2798v
      /p8/+ozoLp8Sn//q96JHCkNxvcG8HIMsLja592NTAGwZLdLwwbIsACoTW/Db6fLqufMXmf3o
      x1jsHf7V3/jnHHzxeR750//Eh379X3L+5Ot88c8eAuD2ez/M04//FStahZ1bxoGArXd9jE/q
      h/jeX/4FIzs/QPPSPG9848tYQGlqx7rj//BXPwL4ZHNlNKA4vg2teyVimEmxmAVA0zQWFhb4
      +Qv7Of1KDsjhAQbQXjzBgYNHqNcf4uQbr3N65Z8B8Mlf+3uYugZAJpMBIJvPo2tgGAZeGPK3
      PvXrfPEbT5Knw2/99iej2/pNcuVoXMe37aD73PNA6TJdzVDMWoCPpsHCwiVe2P9NXsnpkBtd
      d7phZfnd//73KBi1lHttic9bXKyy465ZALZOFql1BZlMBg3QdYNsNgNGGy0MOfHK0/zk6Ar3
      37ETgMbyAlt27I7H73rDZRngFz/2IA9//gt8+N5befVSl09mYPniOV586SUO/OwnfPw3/tv4
      XK/T4MCBAyxeOMWpWo5PTOdZ7B07+PwzrPo2O7ZM0Ox0+cDdd9LNzzKZB6FrrLbalGe2Mnfm
      JF1PcP6tVzl6ZpHdu3dyvt7gwx96gO/vP8t9d+/mwnJr3fEIFnawyg+fepaFE4e49UP/IPWZ
      JrKCx3/8DHfs3bvu2O33Pkj2pbPcd999nDx5DqP3+7PPPM/v/f7/xmzJorN0kr986md8cOrK
      BtnIjVESy7j5bZiSRqwJgtVjPPXsGCcOPc+H/sG/BBbWXZsVHX78zHPsTenrvQ9+hJfO/pT7
      7ruXk+f6r7113z18sEfUsP5euWKLI9/+G2aKgg9+9KN87pE/42MP3sVzJ5p89B8OJuROs0G+
      XGbp4hy1VpeJWz7AsW//MaNGA6FZ/NIv3n9lg/J+Qdqy0K6viNVmN/6+unRRHHzlNeEG0RL3
      Z5/7E3Hw5QNisdrou+7MiTfE/v37xYkzc2vXLs6LtitEGPrijcOHlGOhOHnsqHjt6DERhEKE
      gScOHzoollabYn5+XgghxNmTx8RrR98ScmFdnD8rDrz8img7furxqNlAvP7aIXFufin67nfF
      /KUV0X+KJw6/clBcWq6Jxfl54fZ+l/dt1pbFgQMHxPJqM75GHpOYm5sTzdVFUW/3rnbbYn5x
      tb8d5fiz3/2aeP1CPdEPV7x26KCYX1rtdbUpLq30nxN4XfHKwZfFcq2l9MEX8/OR6FNbviQO
      HHhZrDY78TXN1cW+95d2LyGEuHD2pDh67KQQQoj6yoJ4+eAh0fWCvmdYuTQvur4QQrhifn5R
      CBGK428cFucuLsXn+E5bHHz5ZbFca4rrDZoQbz8W6IknnuBTn/rU1eDHGxKHnv8Jh+c6/Ivf
      +PX3uitDJPCOGGCIIW4UDD3BQ9zUGDLAEDc1hgwwxE2NPk/w1//sDwnH7+DRP/pfmLj7V5k/
      cZRKpcDJk6fxPI/HHnuM2vk3OFm3GB8tYwqHV189SqVS5NSp0wSaTX1xjr/6zpPce/de/vqx
      Jzh76jhTWyY4de4SWd3njZPnyWiCpUaDcrH4Hj76EEMk/ADju+9h9fizWIVpXvjxD/jlT3yA
      7339a9i3fhjx5kuUSiVGS8CIwVM/e5W/dfcYSxdPcObkcYwt+xBvPk4QjDJWzqHpGW6dslnO
      7OSJ734XXc/QvnMfb730NK9ltnHLA3exbXp6QLeGGOLaoI8BRkcnqF2c48GPfRgjP8Ox197g
      1rvvxiuO4mjjeJ06rm4zXakwPurTWq2TGZkgmwvJTYziaLM0qjV8swDAlpktWPYMRWcngVnE
      aTaY3DKLZ0xx9771jp0hhrjWGJpBh7ipMVSCh7ip0R8L1LjAd144yYP33dMLL25w+rTDrl0T
      b6vRTqPKMy+9xic/di8/fe4wIxMTZMI2gVViNAdnzpxj34O/zFjOuHxjQwxxFdHPAH6XRsen
      dek0f/KXP+feB++jeqbJ3MI4rYWzTI6MMP3Ax5k/+iJn3zxKftudhKvnmZrawvTWGZpU2Ld9
      jFxplPFKARA0G02sbJ5zF45TmtzOXR/5IOfOXcA2hovPEO891lHh7Xfdy0SlwO1338+tO7eg
      aWAaJlt372Xn1gkOv7yfTn0JUd6OKTx27LmdBz70izz//Cvsnc5Qb7s0qgu8+eabnHjrOEah
      jOe7jIyM4DgOT/3wCcjk0UT4XjzvEEP0YVOU4E5jhVPzNbaM5ClOTGMPJ/chrhMMrUBD3NQY
      ztVD3NQYMsAQNzWGDDDETY0hAwxxU2PIAEPc1BgywBA3NYYMMMRNjSEDDHFTY8gAQ9zUGDLA
      EDc1hgwwxE2NIQMMcVOjLx+g2WxiWRZLS0v4vo9t2wAIIfA8D13XMU0TGT/n+z6apmEYBpqm
      IYTA932EEHEFaV3XsW0bIQSapsUVhOV3CXk9RFWWDcNACIEQgiAIOHPmDFu3bsWyrL525LHZ
      2Vmy2WzfMRVCCDqdTtxnIQQCsEwTz/MwTZMwXAvRdn0PyzDjtjRNi493PZfkLYQA27QwdJ0w
      DNF1PX5G+RxqW/JZ1c/yu+yvEAJd15V7rLWXbCMMQ0zTRNd1VldXKZVKCCEIw7DvvmljL88x
      TZMgCOL21Ht5nhe/W/UdqdA0Ddd1sW2bMAxxHAfbtmk2m5TLZXzfj+lHvX8mk+mjNcdxEEKQ
      y+XWvcfNRl80aKfTwXGcdQ8WhiGe58WEHgRBTODQXxZbfSmaprG8vEwul4tfRhAE6Loev1hJ
      4CoRlEolKpVK/CIkMZw5cwbDMCgUoqT7druN67rs3Lkz7ptKMLL91dVVut1uXL5c7adlWXQ6
      HTKZTB8DqM8hv4dC4PkefhikMlnOyqwj6L7BTrkmjQHU7wLQN2CY5G+GYdDpdCgUCvi+HxNy
      2r3DMKTT6ZDP59E0jXanQ7PZZHRkhHZvTJyug2WZtDudeIzle8xms3E72UwG0zSprq5SLBYx
      dJ1Wq0Umk6FYLFKtVhkZGaHrOGi9cbdtG9d1CcOQMAyxLCt+15ZtUS6VU8dxM9G3ArRaLQBc
      1wWIGUFypWVZoGmgzE5pL1tyuHzIfD4fE7J6jjoTdB2HoDfDOI7D0vISuXyefDaH3ptVd+7c
      ieM4dLtdAMbHx+NZQtf1dS85DEOWl5cJgiBehdLg+37MHK7rYpomXuBjmwkmF+FA4rcTq8VG
      SM7k6u/q/eRKMgjq6qK2FQTBuvaSq4Z6nfyt0+lQKZepNxrxSmKaJq7ngoC20yGbzSJESDab
      pZDPs7C0RMa2abXbaL0+FfJ5HMfBNE2y2SyGYVCpVGg2m/F7kpNYq90GDTK2DRoU80U0TcPx
      3A3HcLPQtwIsLS1FxCZCNPpfojoTAvFyJn9Le+nq7Or7fl876jIbiog5up1olu5bJjUoFUtY
      lhWLYeq90ggfIiJYXFzE8zzy+fy6GVReY5om9XqdUqnUtwJ4vo/ZmwDkuV7g43juQALP29n4
      cxpxJ7+rq2DahJIc86R4lNYPXddjkS7tXNmWnHWl6COvnbtwgdHR0WgVyeej96ZpCCkF9ETF
      XDaL5/lYlkmz1YrfT6FQQISCTMYmCAIymQxCCEzTpNPpYFkWxWIR0zRxHCd6p4ZBIZ+Pn8F1
      XQSCjJ3haqOPARYXF2PZWw5WmtyaBnmuKv/atk2n08G2o8EQEM8Sg+Tg5MuSn+UqYFkWpVKp
      7xrXdWm32/FAB0FAq9WKRTX5EjRNi/sg72uaJq1Wi1wuFzNAsi+yD67v4QV+JPCrxCcEtmlh
      mdaGY5Q2ZurzD2Ks5HuQv7XbbWzbjvUXddyr1Sr5fJ5MJkMQBLEYq+s6hmHg+z6e58V6k7yu
      3W7Hog5EE52u6zHxZjKZde8rFlssC9d143sKIeK25DuQYpPrrk0ktm2/Z7vLbLhDTFLhSiPM
      5OyUZBh5rjq7DRIVPM+L5UB1OZcrglRkDcMgk8ngui6u69JsNuP2/DAAuSOkRkzU8T1T7jtI
      zEgqoJZhYurRquCHAa7v9VYpDV3T++4zSPlUx09VrC8nPiXHXBK1hDqp+L7P6Ogovu+zurpK
      pRJtIGiaZnyOaZqpup5sU4qMsj35W1o/pbij6zqO45DNZmOGzGQy5JXZXfbdNE1qtRoCyGWz
      sUgExHritWCKPgYYpGBJJGXKK4EcvEG6gnoPuRSnrTqSAEzTpNvtxnoAEA+4YRi0223QI6IM
      Rb9S26fQKvL15fqWJpYYuk7WsjH0fjEpeV6a6KFOKOqKm7z3oHY8z8N1XbK5HKYyW6uTlbTY
      6D1l1LRMMnYGz/PWEa+coeWKaRgGYRjiui6et7YlrO/7sRVO9knTNPL5PLquk81maXciPaFQ
      LGDoBo7jrBsXwzBotVqUy+V4cpTtCyHodrvkcrmYHq4m+u6QttQmj0tIE9cgRVgOziACSkNy
      pZEEL2el5IyszqSSkOIXKASu7yKC/vMk8avig2ohUpVCdUzW3U8z+s5Je5a0viblftlep9OJ
      TcZJ5TdJ/I7jRLqSYqRIjqucDKQ51PU8ms0muVwuXnmkxU8StWVZsQlVyucAuVwOy7LI5XLr
      rG2y/1K82tKr93o58U4yTbLP3W6XMPEOribWsVjaKpD2AJE1YD2x+L6P7/uxrJfkYnVGHyR6
      yBcsbdKDVqG036Se4LsuYRBCKGJTn4T0Z0iLj1xuk+LI5cZgUB+SYzhIp1Chjqfsj3qdhGma
      fSbotD5qmhaPnZTFdU2jVCrR6XRiE2YYhti2jeM45HI56vU6uq7TbrcjRdqyKBWLsc6VhOd5
      8aST7JM0mxuGEYs86viktadpGrlc7prY/yVSKXDQch4qLyT5cuQ5juMQBEFsipNQFUx1VlWh
      LsfqNUkTqoR6b8lM0qHS6zBAH/HL6+QLkw4k9ZnUGT85BqrSpz6L2p+kMq2uhmp7SdElOSGk
      EUmapShNp1EVe9m+67rxTF6r1WJmMwyDlZWVPqaYnp5mdmYmFlOS49ftduNVy/M8wjCMZm9F
      h5AMIMXg9yMuqwOA8oISsnlyZtY0Dcu2MHRjnYlUXTIHybxSjEnqBEmGSSOYQTO0quip95Wr
      gCQoz/cRPT1C9lO9ZtDsnTYOSVk5eW7a86e1L4Tos1rBmsKZ7J/87HkeQRDEnlf5LPIejUa0
      pay0z9frdQqFQvx9cnKyz9IjdQb5bnzfj/1Euq7TaDTQNA3btlOf+Voosu8GqSLQICTlc1Wu
      lsds244tInIApTh0Ob0iaZVQFcXkb2kilDrj2rYdL+/qDKjqLbZtk8lkIlOtZcViA6RYjwYQ
      c6fTxXEdRkdG4nOS4oAUr7qOQ65ndkz2V1rAkp5b1WSbHPckpELaaDTimV+KpHKlk2MnzZVC
      RFaZQqFAJpvF8z06nU48vrVaDYB8oYAQAqNn2ZGikm3bFAqFde8uicuJkO8VrkjNVglukHIi
      EBHhi3TRRJ3JBq0eab/Jz7K9tOsl5BIv+ytt3UEQkM/n1+kjqvVBDZMAYtlZtqcSpjoGjWYT
      ECwuL4OIxiASFaPPrudSKpUJAp9utxvbv6XCJ1cLy7Ko1etYlkW5p7iqzyqdW30iHmviYZIA
      pd9EPnPSoiMhibnT6cTEnoSmafieF9/bcRwKhQIjIyNXZKmRfbkck7wXuKJoUPVlxJ/lnyRO
      +uVm+Vk+tK4QrLQXSxOZOqvJP6kIJglOKnbdbncdM6qigbxOVRrTlG7ZT2n2k99lGIdsb5Ci
      bJoGkxMTiF58jGmZWJYZ2dlNo/fyA1ZWqnEAWbfbZbVWw/cDsplsTOCtVis1dkfO0oMQ99GI
      wheKxWLf+ZZlRauwMoFII4Bl23SdbizWpDSObhgILRKbisUio6OjZLPZKzZTmqb5vtUDrtjQ
      mpT7JUGHCVEkKTIMsuCoUaUbQRV5VN1AjVOS90laT9Jk0iSkoibblFGPanTioOfRNI2J8XGE
      EExNTg4U8eREUOgFnZVS9kYTQjA+NrZu5lfbSIOmabFPRHp1kw4y3/fpOk60BIvIrKkbOivL
      KwNn5Ww2G52n62h6L67LslPPvRw2khzea1yxCCShvhjVcyiXuTTlUb1Wtmek2LCDMMRQmEm6
      75OErK4MagiAvCbZ70EKrPRGStm/3W6TzWZjK5amaXEQYNJJlwb1WZMh0fnLmPaSVqhkv9NM
      g9LyImd7OabS8iLFwNgZJaJjcqWbnJyk1WqRzWZxupFyLeN0pIFADYu4EbHOETYIYRji+z6G
      YfQ5c0IhMFIsG/LFqZ7gjeR+qWAlxR11mVVXgysxHco+J2dzqc9IZVkSit7bs8CyLBq9iEhJ
      BEniTEI9rjrWkivHIKtSmpKdxLpVuKeQep4X369cLlOv1ykWi7EOIMUbeW0YhoyNjZHNZrFt
      O57pN3q+d4uk7vJ+QR/1SA/poMFXZ3iIXoCVMFWmWYagpwQrjKLK+PL6JCShpsnuyRUheZ28
      h2r5UPstVy+5imiahoZGo9mMnThhGOIrMTcbiSJqPwYxZZryrt5fPTdp7ZH3Vk2T8l7ZbLYv
      YUUdN03T+hR8qXS7rku3240tOIMsS5uFjcK630v09UoSTBLypav24UGycZLwVSU4KSLFCugG
      hJEkviQBpvUjyaRphKd+V0WIXDbbJ1YkGTx5b2lmVZG0KKl9VB1TybFSFXH5XTUUCCHiAEDV
      OSiVWmn1kquAIMry6zpOHwEGQUCj0aBarfaJjFcDS8vLXJifZ7VW60tuEkJQXV2NP7vemvk1
      7Vx5/mZjnSNMXaoul5AxSKxJrgZq++q5EkaKEr2wuASIeBnPZrJYlkW702ZsdDS1H0miUj8P
      UmJV27/8TfotZHCYKkqlMYG0qW+0mqmrULIvcuaWxC9XIJkbobYhxT4ZDaqGN0tRR4aiVKtV
      Go0mhUKhp0uZiMh0h2Vf3kCwGVhdreH7Ht2uw8LCQm+18jFNg3anQ7VaxTQtxkZHWVpeioL8
      sjl832d5eQXbthC96HPf9xkdGdnU/m24LiUJNqnQqi+11W6lxtIkleE0ZTaJ6FxBPpfHDwIs
      06LRbNBoNgmCjcMi1Huk6QiqeOS6bl9QlpxZYytTr38ysykZoiuEIJPJ9AXSpc2oG4lOQRDE
      MTW6rqMbOlpPtpf9VJ/Jtu3YBCkZQYYgxLOp69LpdMjlcuTzOTrdDo7r9PIz2ri+h90LGrza
      okkmY5PN5rBtq5d0JBAijOODooC8yNIUOSW7aBrUanWCMIjHNxlPtFm4bD6A+j/5EqVjxbIs
      ctlcn3KcDHFVoXohk4qpxOjoKO1Wi5FKBV3TKFtlMrYd5ZQqokSaGS/JnGmztmSAXD7XJ66p
      fdC19OjNNH1Hve9Guk1yTKXFRe2beh+Zf5sWACfFuzQbvm3bkYPPtpmemopFumKhEPtQ1FXr
      amH7tm1XfG4hn2dmy5ar2Jv1WGcF8jyPRq86RFQxwcdxo2hB13XJ53K0Ox2KhSLNVotyqQSs
      vYyNrDKq4iaTHiRUU6YQAqtnkut0OnEQnq7rFHsueTXeXbatzu6qeJZUgvuUa7FmOk1mw6nJ
      Ocn25DkqE8j7bqQoJ5klDapY5nlerPQmGUXO/Mlnl0qu5/sYes/jHAR4rkcmY0cx+5lsrGO9
      XxXUa4G+J9c0LZZ5u90uzVabrtMFNJrNJp7nc/HSAgDV1VVarVY8A8f5vQkRIBlcBvSFIGva
      WskNWB9vtNZTrU/hlHHs8pogCNYl3yRFLNVnIZ9VXqtel2TkNMVbPTfJXMnf1T6olRrS2pci
      jSR6y7IoFAqpyULyN9XkahhGHDDXaDRptposr6ygERUeWKmu4vsBXSfyRl8LPeD9jFQRSMai
      aLpOq9Umm83guS6O6zJSKZPL5fD8KCEa0i00afKwJDbP9xChiB1MKnklZzOZ44sAO7M+NEGd
      hQeFOkjI47qu02w241IogxR52R/1v8qgaYyRyrzKcbnyJM+VM7Gu67FeIs9PWs4kpB1fBrMF
      YUiz0aBSqbC8ssLoSAXP98nlctiWRcZ1yWYyNHrPbl+Bp/xGRyoDqDPrSKUczdCaRlYx7xXy
      +T7vZjI0QQhBEAbriETXdXwvmqnlizNNsy/UWkKItSTqNPFKQgZaJcUL+T8IQ0DEIo8kKtme
      muWURuhqf9KIfxAxp7WTbCN5nRoishFxGoZBtVrt0wNyuVyc9JLtFZsqKmEXZSWxpVQq9eXh
      3qxYxwBJa4oQIiqTomuIUMSxM2nnyc/yv2ladNqdvnblMq3qALqmpRLcIBNqEuqMmkZwQgi6
      ntO711p1O3muVObb7TaFQiFWPKE/kbxer8cJItIMKZ9H/U2aJtWsLFXkU0uSJK+93G/y2maz
      ydjYGJoWpVNOTEzEYQ+yD8l4K02LPPOBCKOCWzex7C+RugIklcuMncE01uq6qASXJEz50kzT
      jCswJE2hkrjUkhxXSuwqvMCPxCmiOK+MkqSuPgusMZ9lWXR6Sdeyr+VyGSHWSvEllWZJgIZh
      rEsFTVp85LUyW0q2K4lRTZZJU5av5Hd1pZLmQckoapnB1JWmx5zZzNWvuXM9YGBCjCrXy2hJ
      GTOSPKbOppJQJJKyurS9y2PynoNEjkGijxACTRB7kQUQBCG6tt7z6/bqgWYsG9/z46QUeV8Z
      o5+2AqniTDIbSl5TrVbRDQO7F9ff6XT6Cm0JEWViOa5LpVxmtVaLI0L7maZLPp9bpxRLs7Gu
      ryXNCyEwLQtdi0oaJtNG00S1rueSsWwqhcrAvOKbDakrQFK5VIk7bYbayFSovgg1ujMSrURf
      nsAgy8gghKzd19TNdZXcoGfb1zRMyyLoET+s+SfkM6aJcepYwFq9GjmTS+tVuVyOdJveb5VK
      hXa7jdXLMvN9n3w+z8LiIhAllEhrUFQCJI9pRqHYXaeLENB1unFYhpqbICuwCREFD/q+j957
      N5KRu91uXPFC0zQcNxL/BFHOgJqVdrNj3dQ6iPBUTyP0L8MbLduyzU6nA5oWF2KNFNL1IdNp
      bSSdaUIIvMDH74lSuqYhiOp2dty1FEi1NKPTcbDMtUR4tX+qZUl93qQVS1ppZCmVUqkUlx2R
      mWeSEB3H6as6oes6pVKZdjuqlNdoNnFdl2KxiKbJ+kkazVYL13XIZjK47lrVBRmfL1Mc5cor
      HWlqIk0ygFDXdDzXQwQB2d5KMkSEgTqA/J+mYMrZfCOlVTKLTC0Mw5BOuw0Q5+uqItCgtuS1
      SQuNF/hxpTb5u+O5sfdW16OEbWkVqZTLfUqlhPp9UGlE+Vkqtu12m3K5HM+4ssUuKd8AACAA
      SURBVA3ZxyieJZpl2+12XBx4dKRCux2JSVOTk/HYNFstcr2k9EJ+rZJDNpPBtExGR0bjYlLy
      XnIVlWHcuqbHUa5ST5HjKMdjdGSUXPbalRy5HrBuKkiTw5PH0tIR05ZUIQSC9bO76vVNEr+q
      X8jjqtIoCSBvZ+P6/ZJQM5ZN1s7EhCdTA6XYoKYJqnqLuhKos6g8r+M6eIFPq9XC8zxKpVJf
      ip+6AsoVQCqitm3HuQW+7zM2NkahUIgrJQdBEBerUnOYJRPI2V9ad2Sf5D2DIKDT7aKbUQXm
      pGzv+lHBqqmpqd5qMxR9VAzUAYBYjo3KoiONKXEMSZrMrv6m6zphsGadkC/8ckFYaVahjRgm
      eU/HcSgWi+vyUDe6Lk1p1DSNrucgAD8IKFcqBOGaxzlNeQ8VBnZdF8M0KZVKMcGr8VOxaEhK
      +mbvOculcqw7JaGaaw19rex4oVAgCAJq9Tq6plMul9+3CSnvNVL9ANKxlM/ncTyXtqvU4bQy
      ceaW+vKDMERXiFOW5pMRf9L8l1anZ5AJNO14ElIEkQqfmuiS7GPyuuR95GeV4UTvN9dzcQEN
      Dc0C0zD7rhVCoBsG9XqNUrHUl4kWBEHskJKhznJGj+OdJDFHtmMsw4zzA9RxU8M95AohhIhL
      0agrlx/45Hph5EOko28aVhVcWG/jBvpKm8jfwjDE8d2+8yQhyXIkapJ1mv6Q7IP6PWmtSULu
      NFKv1/ssOmmzfFLcSd43eVxP3E8gcDwPP/D7rtEMnWarSaYnf/tB/+rj+V68PVMYhtiZSAdq
      t9txLE+cbxCKeJwgWolDsRYAKPURVfeQJQ8lXNdFR7smEZ/XM9YFw0l4Qa+Ykm5gG1ZU/143
      1syAYRAv90mikS9J1paXlhC5CiRrxKTpGcnv6oyetNBIsapYLFKv1/v2JBuEJIOkWbKSVqL4
      WgRCKCmXus7i4iKWaZKx7d4+AkFUqp2ecp1QhVzPiwtLNXtpmLVaLU78kX4XGa+UUUQY1Tei
      KvAdpWK2YRiMjY2ty04boh+pjjA/CHA9D9uMHC2WYmaTsIz+TCXLMGMriXSGFQqFuEalhCzM
      quYEqLKshEqc0roSBFFNfklYGdOOtufpldoOgoBSLzw7udkbEG/jI02IqlwsC/Kq9/WDACHW
      r0pmz+nleR6e7+N6LjNbtuB7UfkRL/AxpL6TINT42XoMJFcAWW1bCBETrWQEOWmo463+SWau
      N+pR8aye32CIy2NdPoAQIg5hCESAZWY2nE2lLVrr5XSWy2WazSaapsWlB5N5sJqm9cJ1o7qS
      Mv0P1mR6NUZf5uhmc7mY+AEc30U39DgfNo2J5H9N0+LCvdIZ1253yGajjKNarc62rbNrXt/A
      xw36/Q9yBEzdAF2j43R7mWIaYRDGvglN02KdSD5TkgG+8+I5bpmpsG+2sOYnKJfp9vQBNaFf
      9nlpebmvcly3F/asWsEa9YgJyuVogzlVPxpiPdatAKEQBGLjRGlVLJGBX7quUygU4v22VHlV
      vQbWtt1RY29k7IxU8orFIkKI2I4eVY5O708Qrq+mpjqGJIGUSiWWl1cIw5B8Lh+tGMUS9Uad
      QqG/grQXrFl6TMPopfJJU2fkCDNNkyCMUjbDMCQIg2jDCsANfGzTXrfXGkQz/2gxSyFrxjJ6
      qVQi6O27lvRHyMKzQkQr1aWeU9G2LJZ65RU1TUeIkFwux0q1SiFfIJOxqa6usmP7dibGxzd8
      pzcr1otARLZjDQ1T7/cwhr3VQYVqm1fFG+jXCdTz1WUbiJlH7uYolTqIGMHzPHK5XLTBQyaL
      63kIEWKZFr4XVXVW25P3Vj8LEYUOTE9Nxr8XCpGDKpeb6numIAzjGCPTMAj8KB+h0HNoydUk
      l8/heT66Gc34QoBtWfEOh2kh0bKPn3xgBxCJWYauQ88PIOOu1Lgj6QSTK5dhrJU6abXbZOwM
      3W4n1qsyto1tW0xPTUV6xtAKNBB9m+QtLCxE+8y6ThQC3SMc0zDIWuuVKSn+qNWH1aCsQQpm
      UrFNs8+rxCOVZkkI0jchCVHG3ED/zC+xvFIlm41CC7IZO9rv1/XIZDOEvQ00CvkcaJEDLVfI
      x/JO1o72ys1ms4Q9Bm11oo3k/MAnY0aWG7lfWCiiPAjLMLFNa93zqWMgxy5tkpAFrUZ6Vadb
      rVa0qhJ1zTTNOHw7zXCQjPUfikDpWFcXCCBnr1U5iF7O4NiYVqsVy/vJeBTZRtK7m1QqoZ9Z
      5L3U+0lnUD6f5+LFi30bNKjnyTgcyRCaplEsFlhYXMQwdGo9K5HjOjSbLTrdDmiCeqMR1dDp
      pSOq/dK0aFbVdZ1aox4l9GgatmnH3lgg9o+YuhH7CVQkn1taxaSZOJnza1lWbCHqOF3abjc2
      v0pluVar0Ww2abfbtFotGr3nSCrKQ6Rj4BZJpmH0Mqno24hNQsrx8vyk1zWpgK4zJSZEFnle
      EAR0PIeMacdFqZIrxMTEBPneHrbqaiMtO57nxRGRth1ZirZMT2NbFvlcDqOnFFqWSS6fi55T
      gCDEdNa2+8lYkYmyXIriftCiwrKhkJUabAQikvMDn67nRvXzlSKyg55bljOU25m2223Gx8f7
      VjKpHOu6TjFfiHfQkZOEZBLTMjH0XpKSBvlcvz4zxGCsV4Kl2VCZrDKW3aeYyb11ZXy6XIrT
      2lKD2CTSRKS4/V6Is7rDY1J+VgPsksyh63q81Y/KZH0JIEIwPTUVWVK8qGqy3IvFzkY7lsuV
      JZKre1u0uk4sGmXMiMh1TccPAhzfi3wm5np5W/ZL9tV1XcLeOI6MjCCEiM23xWIxtnpJBpcW
      HSliqhXj1PRViDzV12J3xRsFgxNiet/z2Uj5lIWhgHj2CkUYV1ROQooGac4kVRFWv6vH5e7x
      yTYlIQ3SNdTPavKOag1KPDH0mC7KF47keKuXAZfL52h1O2unAoamo7HmgAtF2DfzJx1s8jcJ
      qcOoe/1KHwoQe8y73W68W6PcyUZNtUzTG+ROjkNcGTaIBhVkbJt2qxXb8qVH1+vtFhIGYZx4
      Af3yfiRirAV4+b7ft/VOfK8e0fqBT9vt4vTKgSQJXCWq5O6RSXFKIs0Em9RD1LKMWSuS6XVt
      rWqcoxSdio5pkYOwJ5rIUurSMahGbaYRafK7KkYGQUCtVqNer9NoNMhms3G+ARBPNJlMJh5b
      yeiS+JPPO8TGWKcEh2G0zaihG4R+SMbOxOXpms1mPEvpuh6/iCTSXoDMnlIVViGEkhQjL+7F
      3utrEaOqqCPDkdvtdt9Ml8YQSaZInY0Nk5ydIWvaeEFkZbEtK+prcobVI2uYrusEYdgLefCx
      TKtvw+y0fqStZmq/4iA+1mocybpLMuANiI85vYK3ct9gx3GicIyhyfNtoU8E6nYjz2aj0cAw
      Iw/s5MQk3W63Z00pxpveqfUsJTbyFktmGXS+pmuIIJrlbdNaF2qRFCukbyDtXsn2kyJXmt4Q
      aiGBiBi+1WrFkbCxr0KLRBxJzDL4DyKvsWlkYqU06YBLg5oToX43DAPR295VBvip9Udl3VLp
      JIx/t0yMFMvTEBujbwWQBZnK5TIaUSy6NAlKS4/02qozXbvTod1zXEmsNyVqOI67LogLIBRh
      bEc3ND1OdJFIEpLv+1QqFVqtVp/4Neh8TdPWxfAnzbKaplHI5nB6RWVd3+trUxWVVOI3dQNN
      rCXMq4QdirXiYH5PcU8T2/o+h/01O33fjzeuluZmGaouLV5e4PcK6q6vXj3ExuibMuQyHARB
      XJFXEr06sMloy2NvHef22/Zy4tRpstle7BAapVKxJ/b0kkMMnXanHRG6bjAyUsHx3L7QizST
      adLWL/sqy4KrRJdcAZJiSFr78XcBhmnGm2KkiUxqFKxcqZaWltF0Hcsyafd8E+ouMZ1Ol3wu
      S6ZXsnxmy5YNQ8JloKDUJ9J2h5eWIs/3GBkZGZo+3yHW7RAjoc6YEiqRqXb/7du2RhaTbJZ8
      LsfoyAjFYgHQ6HajGB5dj2avKFZGi8sqqsS/kRkx6diJQhhycaZV0vqjQlXIk4wir9N1nXqj
      EVu3ks9sGVHcj9d7brlSCRHV/XFcJwrLEIJsJkvQq/jguR75fA7HdanV6jhOVLpcxu+r/VFN
      zZKBZJyV+h6CIIjrpGay2cgU+z7dhfH9jr5QiKWlpXVys/wM6bNzEvK6ZHlAeb2UXXP5qL6o
      38uCEkKQtTJxaZO0dpPmTE3T4o3uKpXKOg/yIBNssq+aFkWkLq+sUCgWcP1IfNOIvMCyjSCI
      lFRVR9G0qCYRyjOGoWClWqVcKsWMrlp6Ooq4qIYyJHUqGWgYb3PaQ7NXUcKyLOxejc9ohTWG
      PoC3idTE3KQlQ/4mv6fJ0GkEOsjykc/nCYIwJn4A27T65OxB1hO1LxDpGiMjI9TrdS5evBiH
      /qY539JMkGs1inrlH2U/ReQAtA2LIAx7EaeQSfQT1sKk154dJsbHMAx93XMkQ7YH+TPkua7r
      9lnPhFjbIyyTycS5wLJI7nAleHvYsCpE0rGUdk7ataqokva96zm4vhvP/LI2aNvtrs2+mraO
      aNMIW60zqlY9UK9NE31arRYA1dUqrU6beq+EiiSgyOIT0vXdKLanZwI19MhK00ko/UkkQxlk
      3+UOL0DfrjPJlVe18buu2xciIUufyJVLPqPcFGPIBFeOgetlmjKpLuNqvaC3i7jlnm3d0A0c
      P6qx4wU+QRiQtQbnssr7yuRyWWVaFqOSZVCkCNFut/ucRPVGg0KxSNfpUujlHQRhr7yIrmFp
      Jk6vIltGsfH3DZxSeDZtxUtbgSSkPuL7fpS4nqjVIz2/fi8/QPV3eJ4XB8+lWbuk8iz7OMTG
      2LAwFqy9SM/34xo/0kyZtjpcDoKeYwuNnLSSON2EWVTg+l5fUJnaNxlGUF2tks3myGazcRUG
      x3GiQliVCt1uN7bp1xv1OHEmn8sjNLDtTEyECMjaNrqmx9aXaHXS1xG3KmunTQJp4l8aYp9K
      4EciYI/Qm81m7DuBtSLC0L97TFppmSETvD0MHJ31imNUjU3XdCwjXUlOXqdeH9u1g8isihAE
      fm8lgXWJNn4YgOfGVqGY4TSNWr2GYRhRIFm4FhQXhmG88fPq6mpUiaKQx/U9cvk8oQjxfB/H
      cwhDgaZrWLpBxoxyBGRHkk67QZajQabXK4EkVEmgkuHkczmOEzkkDQPTMuNVQhbe2mjTuCET
      XDnWWYGSAWQSUlEE+kQCSXgbrQbq8bjGkADbMNF0DcdfX/RJImet1bLUdI3q6iqjlZG4T2r/
      kuKAECJeXdRcYojqiWYsu2fpSZ/Bk0ye1EEGWZTeLpKMBRGh1+v1yN9hGszOzMZFvwRRfsKV
      WORkwtAwQC4dl7UCqRuxGb1ED5mql8YoKpLHVQ+qrOFp9MquSEU4eX0grSSaRq1ejyu+JR1j
      6v38IIgKejkdAhHGNXrUfuq6nlpKPTkOaYr0oHPVPqT9qf1MhmvL39XP4+PjUfFbJcQhk8mQ
      vcJaP3IlUPdgG6Ifl10Buk7kkJGVx2DtJatFrgaJPnE7nksQKptS91YANZ7dD/y+1cDQdbJ2
      FtMw6HQ6mLaF60kbfaSL6AnTadd1CFmrlBaEQZRCaJix40rQvwVqWr/TxLt40AY8q3pt2uox
      6B5pbcvjMjZLCBHXEJX5AVcKuRIkt2Qd4gp0gGxmzQGjvrS0l6xel2xHJrr0TiZnZ9fNqqax
      Fuglqx0DkSggQnTLJOhFbOqaFtnAhTStRptcW4ZJpuc99XwvXilkhlsowriidJqlK42A1WdP
      E4GS46JikJiW1k6yT0IIlpaW4t9kRlihUHhbIs1QJxiMDYvjwmArR7LsyKB25Mze92KJQiAM
      1u8xYOhrG9Z1Oh08z6NYKuF6Lo7rRCKTacV9kP2zDAPdXMs/CMOwF94c3bcrxbYeI+r0V6hW
      PdcSah3+y42H+gyDfkvmSav2/uTvMs5HjZKVfUlW1rsSSCZIOuJudvQxgPrCZcK2tPlLh426
      aZzEoOVcAEHgg9CwNAvpARC9v2Q8v6yUJgPw5E6Gvu+TsexohVCIVL1e3Uc3CmaLsrU0IcgY
      VpR4o9yrr58Ja44kRFnI9koV27QVQb1fmrVIZRjHcbAzvVRLXUdoIHSNjJWNd4ERCNqdDpV3
      EPcv398Qa+jTAZZ7lcdgzeUuS+xJpuj26k+q5jsZkalulSqJWDf0uDiU47poutaL94kKz0q7
      tq7rcUyPbMfzvL7KZpq2VkNfWjYk4WhalEes97ZEqq5UmZiciL1u8j7qHmbS0aRu3C37n0b0
      UpFMI6LLyfxXCpWJvMBHCLDN/n0QZB2lK72HlP/TqsRJz3LaM0XKc0Autz7l9UZBHwMsLi7G
      Xsjksqwqx2kx/Wk6wJWYBZNtqDJ48rhEXIZEEnIQEIioeFUoQmzTjmv4qG2r4pEqV6uiRcy4
      vVVPrTyhrn6SGWS0plrfVD1PRnymlW+X1ybPk/1xXBdNAysh2gVhwJbpLVcsBh176zgQJddb
      ZrTXw4ULF5jZMkPQWykdx6FWq7Njx3aCIKDZbNJoNJidmXnbSvf1hHVsnyQaOdtKqMSZpgSr
      hKumTwID/QVp4tQghlLPk+bYjufExyzTikSJXlpjcjaWfYh1h8TGFGrYtHo8qS/IQrrq5KDq
      RirUMfI8D03XL1utTQhBJmP3GQOi3zKga7ieS864su2OJKO02x3yuahUe7FYotFsMj01yZmz
      Z5mensbrbSJ47vwcuq6RyWT7Ntq+EZEaDi2LUMmZUF02B5n0kp+TlpRBjLOREq0iqaQKIeLK
      034YlSLPZrK4joPTS+VM7qqS7IP8LdmnNEU2SdiDrEhAXOlZHYM+xtaIxcJB+lRynKW4BmtV
      I9KqcaShVqvFJSc9zwNNIwwCTMsi24s5arZa5HM5wlBgmFH8VD6XW9uz4AbFOkN4GIZ9KXhq
      6UO4Mlf/IJNg8rj6PSkuua7bRwRJCwoa6JaJG/iE9Eo09gLFxkbHYhElzWGm3lcVu5IlyDey
      biX7rfY1jWj6xmQAv6uWNbVd2baciOTmfFcycUBUa2hhYTHej0zGIMntUk3TZKRSod5okM1m
      8Hr7Gd/oxA8pOkC7t5MjrO3mKOVTtTqBOit2Op2+gK3UG22wAsjfVEjrk3pcpgpGOcR+TPRC
      iKgyda2GncsS+D5ZO9u3m42Uu5PKntqXVq8EjLofgfrcSXFnkOJ7JUrwRufISUcdN7kaqxte
      yLKKl8NKtYqh63i+T7VaBYh3i2+22rheL5mmp3tks7leSXaX2/buvWz71zP6Rs9VauCgr81C
      0tqSJgYAMdFIpJn7VKiWB2lqVAlL3jPZVqa35Ou6QdYwqNVqvYp0gtrqKqVymXangyDyCOfs
      NWVejZtPtgtr1eZcz8U0+lc9uR2RLLeo6kQyPJmEnpAmJg5i/OT5yVVF7q2s6iOyFMqVMEC5
      VOLsuXM9y5EelYIX0Gy1KBaLWJaJEOA6DkEYks1m4rL0NzpSrUCy4pkaez5I5r0Sm3fSiiRX
      DJntpOt632An9YhQhBi9askyVFnXNEqlMmEYxB5eDR0/8GJilKmLaTpHGoHKvkhilxYZWQQg
      OQEEQRDv5C6V4mS5E3m+1EfUDS2A3g6Ufl8ZGIByuRyPv8xvkNGufuBj6AbNZpNCofC2bPvv
      xkR7I6KPAWThK2kClDPgoJiZy2GjlSBZ/TnpFOuTy3vXOt1uVKqw2YoVQXmfMGVTDxnL/3YR
      5wIMqGsq+6dWoE4zDae1KU2cKgOEYdDXV7kCyjFSyyYahoHreRg944Ts5xDvDH0MMMQQNxuG
      U8cQNzWGDDDETY1hZNQQ1xTf+MqXmBwfZfqOj2I0L7B1zz7OHjvC1Ox2nnjiCW6fLbFs7+JD
      9+5l/tQxtt16B3bY4chbZ7l9z3bOX7jExMx2movnePql1/iX/+yf8N1vfZMdt3+AqbJFO8wy
      moOVdshYXqfm6pRMn7prsHv7lnX9GTLAENcU2dIoH/+VD/Fnf/Jlcjv2sW2piu+4vHZ8jlKp
      xGgpByN5nn78CVZ9n+Lkdsz2AhdPvMLJ42+yZd99vPn4NwlG91DOWUADYU7ygTtv48ALP2P/
      4ePs2zmFVZnl54dfIFOZYbKgkZvceXkGePPIIc6dvUBxaood229hdmp046fpVPn+zw4xmrfZ
      te9utoyVOXDgAA888MBmjtkQNxAKts7Tzxzi137jH/PKkePsnp3gteOX2DI1gehW6ZBlvFKh
      MzHJVC5gYaFKPqwzMjFFLrSZGK2gze6gWqtiFspAhbGyx6tHj9FoNJiZmWHHjm28fvoiO3fs
      pDi1g7IVcPz8cnqHRAI/ePRRsdL73G2uipcPHhJdLxDd5qo4f/68eO314yKUJ6+cEI/+YL8Q
      IhTf/NpXRScQYnFxUQghxPnTx8XhN46LMBSi26qJg6+8KtwgFKHvisOHDorT5y8JIYRYvnRe
      HDx0WLh+KMLAFa++clDUWl0hRCiOv3FYHD99PtnFIYbYNAxWgoXHdx7/MXfdsYfHH/8blk+/
      xsHTNWbLIU/+dH/iZI27d49ybK7Jc889h2jM8dzrF9kxVaLjBXz/b37MHXt38r3Hn6DdbLBj
      752cOfQ0Cx3Bj3/6HHfu3UGr1eGJxx9n92138OT3H2fuyM+46I9Syg03fLiR8NrJBb76o8Px
      33uNwTqAu0ymshU7U8DUIifMzMwMY7MjOPu/u+70asNl6x05zgBacQvbCsc5cPA17vnFe5g/
      v8Lh199ibGyME8dep+4ZLC7Ms62rsXf3Nl7af4DZW+7h0qWLvHn0MOXKKJO33s/x517itUsa
      H/v4FJmhveqGwOFTC3xNIfx//nfuZu7caR5/8of83b/9YV5+8yz5rEFjpcrtd96L323wxptH
      +Ef/7L/iB9/5Ktt23MXeW3Ywv7jK6TOnmZ6a5tbdO7i0skylWEETIZalc/LsPHt2bWVpeZVy
      qQjojI+P8e1vfZWpmVu5ZccWGh1/AwbITGM5z/Pii8+TK08AAceOHqJ5qsOeux6MTzt78k1e
      fN6jYU2wtWTwMuC06ggrg96ps1C12LG9iB+GjIyM0lk8DZlKzwvs0HUElqVz8eICe3bvoOv6
      lCojtGqrZHJ56ufP0PYgs36f7iFuEGzdvovZqUlsyyT0OgQZi/NLddyjh/mlX7ifidnd5GWk
      gKbzve9/H13TsCoTjOd9vvnYX7Pvgw9y+PBLmGGXbdtmeePIEd46e4x9t93NsYMvYZo6f+fj
      n8Iy83z0ww/yzNM/5tCRY1fuCb5w5Fnmc3fxwC2XUYyHGGIDfPVHh/tWgL/+P/9L5i+c56mn
      fsq+fXtZrrfIFYo0luYxcyW6zVVmZnZwz/3389rB53jggV/iuZ/9BF/Y6IZOs7bCxOQUez5w
      Hy8//RRnz1/g7rv3cuHsHPmJaX7po7/EyUMvUPUzfOwXH+CnTz2JlRvF6dY4e+bClTOA06rh
      6vmhTD7EdYdXDu7nrns/iJVWS/VKGWCIITYDYW2OsH4h/m5uf3CDs68+ho6wIa4pvKN/jfv8
      Z+Lvpd87zNy507xw4BV++SMP8NKho4xPTNKqLjCxZSd+t8HcxXk++ff+C1545kkKpWke+OD9
      AOx/5VV+4b4PvO0+vPb6Qe65I2pjyABDvOfYun0XmVcOEbgO9XodzXB489hFbhMGf/sjH+L0
      +TkMTaNaXaJQnuGvHv1zjh47xb5772Ph3DGcUCfM5jF9DTPscustO/jGN7/DBz/yQQRZzKAL
      hsmnfvXXePTRrxCa8OqBA5w6tzQMhhvivcf8hfOcPn2GN44fpzI2juubTJSzNBpNvv7oV9m2
      dTuhEBSKZR64/17sbI6Pf/xXyFpWtOGiafHLn/gVnNYqb751nBPnzrBn1zZW6w4f/8QnGCkX
      sXMFoLfReBCQL5X5xMc/MdQBhri2eC90gBef+ym33fshRvLrq2gMGWCImxpDEWiImxrXFQNs
      VOPnneBqVEre7DaHfdy89tKEnffUCiREyPE338DMV5ieGI339hodTfc2tx79r2H+ZQD+3epv
      87q38xr2dogbDd/8N7/13jJA7fwJClv30jx/nFfnTjG7Yy+LcyfIlicpZ3WWmy6VrI6Rq7Bj
      6/pkhiGGeLd4TxnAzue4VF3FcV3GRseZnp4gcKPKdGfPnqI4PovQLbbPDol/iKuD95QB8uPb
      GPcvYOy+lXLO4NLyCjMzMwBsmRxjueEwMVqO91A1pu+E3t7Bt47txPan39X9xVUoErXZbQ77
      uHntoWn92/Fq15kZ1PP8TS0C5QdBb7OOzcNmt3m99lHX39mWsXGbSjXszUCy1qzENV8BnHad
      E6fn2LbrFsr5DODTbPkUCymlvp06K36esULUzf/1Cz/h9TMDcjuHeF/h4f/5H0UJ7u9zXHMG
      OHlmjjvu2IffbfLqocMUKiVOHa9y3707OHl6ni3TIzi+iddcYqJS4I0Fj+3To+zesfVad3WI
      mwDX3A+Q0QWr9Sbnz88RhC5tR2N6epKlhUWalxZYDeDW3dvJlkaZGiuxffdeCNzLNzzEEO8A
      13wFuOW2fVyYm2Nm+04ytRFGK2M0qsvkS+OMjM9QHo32o9o6OwumxmzWhNIsALdtGydrb15C
      zvWivF2PfdxsveVq4bpSgjtdN64UvRmQZeA3E2ltZiwTXX9n/d5sZfBqtHk99HHTleD582dY
      rbfYuutW9NBN3UxtZWWF0dGxd0SzzWaTQrHYZ7b63x/56XWpBP/Hf/0pbpkd5lK/H/GOGaDe
      6rLvjjs4duwtMhmbpYvnqTkaGbpUJsc589ZFipUsl86dIjc+y8qlOaa2bGVx4QITW3axfWYc
      gNPH36DmaBStELs4RuB2ADh36ji33303586cpzQ+zW27t2/OEw8xhIJ3rASLMKBeXUa3sjiO
      w9LyCktLi9i5MjNTFaZmd1IsFNh3ywznz18kNDO0qosEmsHS0lLcjrzOEhJFdQAADgxJREFU
      8ULGKiWajTrLK1UmpmcomSErLX9T5f4hhlDxjnWAdrNOreWwZWoCx3HotBrodp5cxsK2DVxX
      ACGWoeEJneriJUbGJ1it1siYgktLVQw7z3g5i27nyRqClifQ/G78vRtoBE4Lu1ChmMvwpb95
      hfOLjU17+GulYP6rv38/02PvbL/d60G+vh76OEgHuK6U4FbHQfDeK8EaUMjZqcduRuK6Hvq4
      KUpwt7bIW3MrlMsVdm7bOEBteXmZ8fFxms0mQgiKpRKtZvOKdx5vNBoUS6U+cv83X3r6faEE
      Z22Tr3/6N9/rbgyxCXhbDOC1GnSCEL3V4vAr+ymWRql1uoyMTrA0d5L8yBS616I0McvZ40dY
      mNxG1tI5d/oE++59kFZtgSOHFtl7972MVaIk5ZPHjrLahXJGkClN4DtRNOi50yfYd9ddnDp5
      lsrkDPv27Nj8px/ipsfbVII1Jqdn8J0Ohco4BVtjdGKCTrvF2OQWspaOLzRKxTzTszvIWjqu
      6zI5tYVSPofrelQqRZaW1mbxlWqV1dUqri+olIo06jWWq6tMTm2hYIY0XcjnhoVBh7g6eFs6
      QOi7LCytUB4Zw9TBti2WF5eojE8Q+l58jicMMtbaRteaCHACDdvUaTXqmKbJxYVFDDvHRKWA
      bmfJGNDxBPhddDtHxgAn0AjdNlauRD5r85UfvMrccnPTHl6EAu0dOKhsU+d/+M0Ppx67GeXr
      66GPN4QSvNrosJmdVZVg0zAo5dMV27eDm5G4roc+bponePXiHHO1Jjt37KY4wBJypQi9Lt1Q
      4DsC8CmVSus6WK/XKZXKaBr8X1959qopwffv3cKn/5uPX5W2h3j/4m0zQLtWw8WgtjTPq+fO
      Ui6OMLtrOxfPzlGt19g6M8HcxRa/8OB9ZEyN1sI5ji50KWktLtVcto4XWViuUcnqjM9spea4
      nDu+SD7vsGP3bVw8fRyjOIEZNAmMPO3qJXbvu5eZqbGr8fxD3OR4B55ggz233UbQbZEvjTGz
      YzuvvHCASsHGypfIZ01md+whY0Yzeej77L71VpqNFhNjoxh2jvHxMW7dMUWn62EXRxgbLTMx
      PkmxmKHV8RmplChWxqkUc4xNTlEsvP8TK4a4PvG2dQDfddEtCw1BdaVKeXQMz+mSzWapVVco
      lMqgGSzOn6XRdhifnGZ0tELodmk5PoVcFiEElqHhh4Bu0m7UKBQLtDsuphYgDBvbjGRzjZCO
      G1Iq5Pjaj17jwlVSgndtGeGf/vId77rNm1G+vh76eEMowUurLYJN7G0Q+EyOFLHMTcyPvQmJ
      63ro4ztSghcvnGWx3mJsYgZDeExOTl7xDWu1GlnLQMsWsN+BqbFWq1GuVPo8wX/49Z9vuhL8
      f//ur3L7jolNbXOI6wcbMkCr3qQ8Okqr0WDl0lnmF5bR3TpLbdi+ZRwbcPSQ5uICIl9hbGSC
      i2ePUxiZ5OKFc+zZugNrJMO5uVWmx4q0q4t0rRITo+Ps6u3a/dbRQyx3YCxvkKtM4nYiEWfu
      7Cn23Xknr7/+FmMz27nn9luu+mAMcfPhMkqwRq26jJ3LMzE9SymfoeN4TE9O4HTazF9aIMBk
      z7YJpnfspbNwnsAu0fU8JsZG0cIAq1jG8mqsdGDvzmnGZ29F+J34Dqv1Bt1OGz8QFHJZGrUq
      y9Uak1PTZIwQYeYYLZeu8jAMcbNiQx3A9zwM08TzvLgejwh8un5IxtRx3IBsLoOhCYRmIsKA
      drtNLpfDdx1008Y0dZqtDoV8DkODAINus8rcxUUMO8/s1AiaYWPq4AYCLfDQTBtLBy/UCH0H
      086RsU3+8qkjXFxpbdrDh2HIb/3K3Wx5h6HKabgZ5evroY83hBLs1+bRhYcrTKrhO18VbMtg
      vJy/Ll7csI+bg/dFYax2o8prR4+xdcduts1M9R1bWFhgamrtN99p42lZcrYeH+t8/3+E+Zd5
      3d3Jv6v99jvux717pvk//tUn3vH1Q9w4uKYMkC+NMjIywtbJMidOzaEJh9rKAlqmjBG0OX3u
      AjNjBWr1BoV8FnIT1FeXsCy7jzmGGGKz8N5skGFk8ZsXsIsT6IaFrmkUK+NMjVdwPZ9Czsbp
      OnTaXbLF4mZWQhliiD5c88JYe/bsASDQ88xOlnAbFbbt2IXR8xXoGrS7LrmMhdAMnE4bOxPV
      DTX3fAJt4lYmgzE+1dnzjvuwbbL87h9kiBsC15USfGGpjue/u22SRopZKsWIoa4H5W3Yx83B
      u1aCL86dpdbsMLt9F6V8lKHV7OX4LiwsMDk1tT5d3XdoetplwqZdqlWX0dEUU2RnhQWvxFQ5
      KovyR3/1wrv2BP+LT97Db33irnfVxhA3Dq6YAdrtFqCjtRZ49vUak5UiBh5Ou0nDESxfPMvJ
      81X23LqN2qVl8qM5Rouj1D2NbrvN3r17KeVtgk6Vg2+cZ9e2KQ69coCZnbu5cLbOXXdMsf/g
      MfbdsQu0HK3qPLMTFV5fuMDqWInb9gz3Axti83Hla4ymk8vl0AkxTRs0CPyQIAwxTRM/FNyy
      exeWZbJ9apLirnGWTy/jBRqmnY1rY4rAx7CyrCwuMjk7hRA2pUKGpeVVRjMWHd3mnl3bOa0F
      TI1laBXGoXFh474NMcQ7xBXrAEHg47oell/nXDvHzqkSIgwRYUCIhqnruL6PZVloIgozFqFA
      aDqB57JaXaJaa1IenWS8UsAwzZ6cZ+H7HoahEwQC0zLRNQ0hBLoGodAAga7rPPbsGyystt/V
      Az9w+wz37422YboeZNdhHzcHN4Qn+PxCDfddKsGzEyWydjSw18OLG/Zxc3DFSvDcmZM02l0q
      EzPoocv09JVvRLeyskLetjELBczLGu87XLrkMT092CTZTBTS+v++9eK7VoL//e/8He7cdeVh
      3UPc2FjHAM12m0wmh+t0uXj2OBcXq3SrF6i6Frds34KmCXQRsLK4iDVSZrQ0w/E3XmF8ZjtL
      ly6wfWY7+ZLB2fkG0+N5GkuXCAtjjI1Ms3v7JBBy6MABtuzawvE3LrK8Okq7epHK/9/euey2
      bURh+BtSV+pqy5J8t2QrSpykBdoibYCuC/QNuujr9CH6At10E6BAii6zahrEceDCaeO48VU3
      S5FtipIoWybZhWTFhpMiEeU2cvkBWpAgDw81M+D5OZxzRuO0jtsEwh5K2zWiiSguyaKt14kk
      ppkedzqtw+C5OBMsuXBLFkJ2kZiYJhzw4vYpLMzPcdSskS9VkNw+0pNJpjML1Ip5AokpEIJo
      SMHCJBAZBX2fhuEhM5tkYu4adPMGASAEsiQxOZvG75GJJaeIBHy4XG5M02BiOoXfI2OZnXBn
      WKqNOAwfFzSAaZqIrgjtYVmYFl1R2i2BCdA9zjBMZFnqdFhJQhJwctLZ14mEBHV1n8LeK7xK
      iJnJZLdma0fgAkhC0O7GfZ1Ln17fwrJAlmV+/u0FlUMdO3z9xQLJ7pzDMMSujo+D4UqI4K3i
      AUdto38DQnB9JtbbHIaGc3wcDO8kgnc219GPTVIL2V5ak36pVqvEIsHeTHCpVCIYDL49O7TZ
      pt4yCXZnmU+zS5/l+5+WbIlgSRLc++6bvs93uHqcGwCNRhPJ7Wfj+QprL14yk7nJTMxHcb/B
      9uY6C7PzaLLC57czSEJQ2N5APSjTMt0kM5+i7T5FbYJf8VIplvjkZoq9Iw/1g0PcHjeqqiLa
      ddZLDeaTYdT6MZ/dvYNbCGjXyJc1Xu1UiMYUisUid+5+SSTo5ARyuDzOiWDJ7SObvYbH7eb6
      4i0WFyb5fb1ELOhlPnODkZCfzLVO54fOY0oSINxedjbWaLVNQIBwMRbrZHQwjRNMBKJ7Ja1x
      RNDnwReMMDuR4PVbfQssi8mZNIqiEB8Ng9FGa7bQtMHlAnJwOMs5DfCucmDr5QuODZiaTRMw
      a+zqfmZiSl8OlIs5DrUmI/Fx4iNvnxMQQvDLo3Veqf2LYCEE3371UW97GGJXx8fBcCVE8NnF
      +YPANM2B2rsMm46Pl2vvX18QYwdZlgf6pwghBt5wg7bp+Dg4e6e/c/uH6Qng4DBohuoJYLRq
      rK5tMzY+hWwdo+s66XT6ve3U1SobuQq35saonvho1lRSs1O2fMttb1BVdcYSMUJuOHaFGYv0
      p4sAWnWVzd0coVAUl9eHXtdIp1O2fDxqHLL6V4Gp5CgeYSAFx4gG+i8/pVaL7BQPmJtO0jRc
      6JpKOmWvllu5sMtBo00souD1eNCOBZOJkb7tHTVqbOWKnCATiwRp6TpzqVTvSfDfLIrvk3K+
      TObj2+jaPhvPlhBKfzUDAuFR/G6B2W7x66NlJqYmbfuWSCSQZJnGYZXnW3vEwv13fgCvEoR2
      ixPDYPXpEsqIzawYlslOvoLilVH3y2wW94ko9mqvWRYIDJqNBsuPHxON/3Pl0HdhN5fjuFlH
      VQ9Z/uMl4/GoLXveQJh42EdiYprNP59i+iLnwqChGgDR0SBrq8+wZC8T84toe7t9lUyqHbwi
      l8+jNY+4vZhlaytn0zOLJ0tP8Pt8yF6FmXiI8qG9gt5NTUXyKuiNOunsDSr5/u6156FpIAmT
      fKGA5AmSjPjY1+ytrZAkFy4Zms0W2cVFCrs7tktYhUJBLPOENi6yc+PkSnaTIVtUai3GQl7G
      U1malQLmmah/6DTA6bdKPYR479LZpml2K7pLvZQr9irGW5iGiQXnhJsdm5ZlXXxz0ce9vsnu
      WT40Hy3L6rbNayt228ayuPB926nNoRsADg6DZKhCIAeHQeMMAIf/Nc4AuAIYeo0ffrzH+rNl
      ymrrjcc8fPjwreevrKxw//59Hjx4cEkefrj8DQXbsjgv0xkmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Top Cases Pie Chart' width='164'>
      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
    </thumbnail>
    <thumbnail height='164' name='Top Deaths Pie Chart' width='164'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
